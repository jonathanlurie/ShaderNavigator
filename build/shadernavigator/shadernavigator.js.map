{"version":3,"file":null,"sources":["../../src/HashIO.js","../../src/QuadView.js","../../src/AjaxFileLoader.js","../../src/TextureLoaderInterface.js","../../src/TextureLoaderOctreeTiles.js","../../src/TextureChunk.js","../../src/ChunkCollection.js","../../src/LevelManager.js","../../src/OrientationHelper.js","../../src/QuadViewInteraction.js","../../src/ColorMapManager.js","../../src/ShaderImporter.js","../../src/ProjectionPlane.js","../../src/PlaneManager.js","../../src/MniObjReader.js","../../src/MeshCollection.js","../../src/GuiController.js","../../src/BoundingBoxHelper.js","../../src/Annotation.js","../../src/AnnotationCollection.js","../../src/QuadScene.js"],"sourcesContent":["'use strict';\n\n/**\n* An HashIO instance reads and writes the hash part of the URL (what is after '#').\n* The read mode: the user can specify some arguments in the URL to specify\n* the resolution level, the position and the rotation. Here is how the URL should\n* look like: mydomain.com/quadView.html#5/1.01,1.02,1.03/0.1,0.2,0.3\n* Where:\n*    5 is the resolution level\n*    1.01,1.02,1.03 is the x,y,z position of the intersection plane\n*    0.1,0.2,0.3 is the x,y,z Euler angle rotation of the intersection plane\n*\n* The write mode: everytime the intersection plane is moved, the hash is refreshed\n* so that the url can be used to come back to a specific position within the dataset.\n*\n*/\nclass HashIO{\n\n  constructor(){\n    this._rePattern = /(\\d)[\\/]([-]?[0-9]*[.]?[0-9]+)[,]([-]?[0-9]*[.]?[0-9]+)[,]([-]?[0-9]*[.]?[0-9]+)[\\/]([-]?[0-9]*[.]?[0-9]+)[,]([-]?[0-9]*[.]?[0-9]+)[,]([-]?[0-9]*[.]?[0-9]+)/g;\n\n  }\n\n\n  /**\n  * @returns the hash if there is one (without the '#'). Return an empty string if no hash.\n  */\n  getRawHash(){\n    return window.location.hash.substr(1);\n  }\n\n\n  /**\n  * Reads the URL hash and returns plane intersection information if the format matches.\n  * @return {Object} the returned object if of the form:\n  * { resolutionLvl, position {x, y, z}, rotation {x, y, z} }\n  * Or returns null if the format does not match.\n  */\n  getHashInfo(){\n    var match  = this._rePattern.exec( this.getRawHash() );\n\n    if(!match)\n      return null;\n\n    return {\n      resolutionLvl: parseInt(match[1]),\n      position: {\n        x: parseFloat(match[2]),\n        y: parseFloat(match[3]),\n        z: parseFloat(match[4])\n      },\n      rotation: {\n        x: parseFloat(match[5]),\n        y: parseFloat(match[6]),\n        z: parseFloat(match[7])\n      }\n    };\n  }\n\n  /**\n  * Write the hash part of the url\n  * @param {Object} objectInfo - should have this structure:\n  *   { resolutionLvl, position {x, y, z}, rotation {x, y, z} }\n  * If one of the parameter is NaN, the URL hash is not updated\n  * (some low level bug tend to produce NaN Euler angle).\n  *\n  */\n  setHashInfo( objectInfo ){\n\n    // dont refresh if we get a NaN\n    if( isNaN(objectInfo.position.x) || isNaN(objectInfo.position.y) || isNaN(objectInfo.position.z) ||\n        isNaN(objectInfo.rotation.x) || isNaN(objectInfo.rotation.y) || isNaN(objectInfo.rotation.z) )\n    {\n      return;\n    }\n\n    window.location.hash = objectInfo.resolutionLvl + \"/\"+\n      objectInfo.position.x + \",\" +\n      objectInfo.position.y + \",\" +\n      objectInfo.position.z + \"/\" +\n      objectInfo.rotation.x + \",\" +\n      objectInfo.rotation.y + \",\" +\n      objectInfo.rotation.z;\n  }\n\n\n\n} /* END CLASS HashIO */\n\nexport { HashIO };\n","'use strict';\n\n\n/**\n* A QuadView is a projection of a rendered scene on a quarter of the viewport, typically: top_left, top_right, bottom_left or bottom_right.\n* A QuadView instance is part of a QuadScene, where are renderer 4 QuadViews.\n*/\nclass QuadView{\n\n  /**\n  * @param {THREE.Scene} scene - the main scene to be used by aggregation here.\n  * @param {THREE.Renderer} renderer - the main renderer to be used by aggregation here.\n  * @param {Number} objectSize - Considering the object is centered on origin, this is a distance to be used so that the camera are not within the object. Example: 2 times the largest diagonal.\n  *\n  */\n  constructor(scene, renderer, objectSize){\n    this._isPerspective = false;\n    this._objectSize = objectSize;\n    this._camera = null;\n    this._config = null;\n    this._near = 0.1;\n    this._far = 1000;\n    this._defaultFov = 30;\n\n    // set when decided which corner\n    this._viewName = \"\";\n\n    this._originToLookAt = new THREE.Vector3(0, 0, 0);\n    this._control = null;\n    this._renderer = renderer;\n    this._scene = scene;\n\n    // mouse coordinates, given by an higher object to prevent recomputing for every view\n    this._mouse = {x:0, y:0};\n\n    // keeps a track if the mouse pointer is within this view\n    this._mouseInView = false;\n\n    // depends on what corner\n    this._backgroundColor = null;\n\n    // we save to get a resize ratio\n    this._windowSize = {\n      width: window.innerWidth ,\n      height: window.innerHeight\n    };\n\n  }\n\n  /**\n  * Define the point the camera is supposed to look at. By default, this is in world coordinates but if you place the current camera into an object, this will be in object-related coordinates.\n  * If unchanged, [0, 0, 0]\n  * @param {Number} x - x from 3D world coordinates\n  * @param {Number} y - y from 3D world coordinates\n  * @param {Number} z - z from 3D world coordinates\n  */\n  setOriginToLookAt(x, y, z){\n    this._originToLookAt.set(x, y, z);\n  }\n\n\n  /**\n  * Init the current view as the top left view of the quad view\n  */\n  initTopLeft(){\n    this._config = {\n      left: 0.0,\n      bottom: 0.5,\n      width: 0.5,\n      height: 0.5,\n      position: [ -this._objectSize, 0, 0 ],\n      up: [ -1, 0, 0 ]\n    }\n    this._viewName = \"top_left\";\n    this._backgroundColor = new THREE.Color().setRGB( 0.8, 0.8, 0.8 );\n  }\n\n\n  /**\n  * Init the current view as the top right view of the quad view\n  */\n  initTopRight(){\n    this._config = {\n      left: 0.5,\n      bottom: 0.5,\n      width: 0.5,\n      height: 0.5,\n      position: [ 0, -this._objectSize, 0 ],\n      up: [ 0, -1, 0 ]\n    }\n    this._viewName = \"top_right\";\n    this._backgroundColor = new THREE.Color().setRGB( 0.9, 0.9, 0.9 );\n  }\n\n  /**\n  * Init the current view as the Bottom left view of the quad view\n  */\n  initBottomLeft(){\n    this._config = {\n      left: 0.0,\n      bottom: 0.0,\n      width: 0.5,\n      height: 0.5,\n      position: [ 0, 0, -this._objectSize ],\n      up: [ 0, 1, 0 ]\n    }\n    this._viewName = \"bottom_left\";\n    this._backgroundColor = new THREE.Color().setRGB( 0.9, 0.9, 0.9 );\n  }\n\n\n  /**\n  * Init the current view as the Bottom right view of the quad view\n  */\n  initBottomRight(){\n    this._config = {\n      left: 0.5,\n      bottom: 0,\n      width: 0.5,\n      height: 0.5,\n      position: [ -this._objectSize/10, this._objectSize/10, -this._objectSize/15 ],\n      up: [ 0, 0, -1 ]\n    }\n    this._viewName = \"bottom_right\";\n    this._backgroundColor = new THREE.Color().setRGB( 0.97, 0.97, 0.97 );\n  }\n\n\n  /**\n  * Build an orthographic camera for this view.\n  */\n  initOrthoCamera(){\n    this._isPerspective = false;\n\n    let orthographicCameraFovFactor = 360; // default: 360\n\n    this._camera = new THREE.OrthographicCamera(\n      window.innerWidth / - orthographicCameraFovFactor,  // left\n      window.innerWidth / orthographicCameraFovFactor,    // right\n      window.innerHeight / orthographicCameraFovFactor,   // top\n      window.innerHeight / - orthographicCameraFovFactor // bottom\n      //9.99,//this._objectSize * 0.9, //this._near,\n      //10.01//this._objectSize * 1.1 //this._far\n      //1,\n      //10.1\n    );\n\n    this._camera.left_orig = window.innerWidth / - orthographicCameraFovFactor;\n    this._camera.right_orig = window.innerWidth / orthographicCameraFovFactor;\n    this._camera.top_orig = window.innerHeight / orthographicCameraFovFactor;\n    this._camera.bottom_orig = window.innerHeight / - orthographicCameraFovFactor;\n\n    /*\n    this._camera.left_orig = this._camera.left;\n    this._camera.right_orig = this._camera.right;\n    this._camera.top_orig = this._camera.top;\n    this._camera.bottom_orig = this._camera.bottom;\n    */\n    this._initCameraSettings();\n  }\n\n\n  /**\n  * Build a perspective camera for this view.\n  */\n  initPerspectiveCamera(){\n    this._isPerspective = true;\n\n    this._camera = new THREE.PerspectiveCamera(\n      this._defaultFov, // fov\n      window.innerWidth / window.innerHeight, // aspect\n      this._near, // near\n      this._far // far\n    );\n\n    this._initCameraSettings();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Ends the building of the camera, using the settings from _config.\n  */\n  _initCameraSettings(){\n    this._camera.position.x = this._config.position[0];\n    this._camera.position.y = this._config.position[1];\n    this._camera.position.z = this._config.position[2];\n    this._camera.up.x = this._config.up[ 0 ];\n    this._camera.up.y = this._config.up[ 1 ];\n    this._camera.up.z = this._config.up[ 2 ];\n    this._camera.fov = this._defaultFov;\n    this._camera.lookAt( this._originToLookAt );\n  }\n\n\n  /**\n  * Adds an orbit control so that the user can play easily\n  */\n  addTrackballControl(renderFunction, domContainer){\n    this._control = new THREE.TrackballControls( this._camera, domContainer );\n\n    this._control.rotateSpeed = 5.0;\n    this._control.staticMoving = true;\n    this._control.zoomSpeed = 0.3;\n\t\tthis._control.panSpeed = 1;\n\n    /*\n    this._control.zoomSpeed = 1.2;\n\t\tthis._control.panSpeed = 0.8;\n\t\tthis._control.noZoom = false;\n\t\tthis._control.noPan = false;\n\t\tthis._control.staticMoving = true;\n\t\tthis._control.dynamicDampingFactor = 0.3;\n\t\tthis._control.keys = [ 65, 83, 68 ];\n    */\n\n    this._control.addEventListener( 'change', this.renderView.bind(this) );\n  }\n\n\n  /*\n  * Change the background color for this view. If unchanged, top_left and bottom_right are in a bit darker gray than the 2 others.\n  * @param {THREE.Color} c - color\n  */\n  setBackgroundColor(c){\n    this._backgroundColor = c;\n  }\n\n\n  /**\n  * Render the view, should be called when the main renderer is rendering.\n  */\n  renderView(){\n\n    var left   = Math.floor( window.innerWidth  * this._config.left );\n    var bottom = Math.floor( window.innerHeight * this._config.bottom );\n    var width  = Math.floor( window.innerWidth  * this._config.width );\n    var height = Math.floor( window.innerHeight * this._config.height );\n\n    this._renderer.setViewport( left, bottom, width, height );\n    this._renderer.setScissor( left, bottom, width, height );\n    this._renderer.setScissorTest( true );\n    this._renderer.setClearColor( this._backgroundColor );\n    this._camera.aspect = width / height;\n    this._camera.updateProjectionMatrix();\n    this._renderer.render( this._scene, this._camera );\n  }\n\n\n\n  /**\n  * To use to embed the camera of this QuadView into an existing object, so that it can profit from this object space transformation without further work.\n  * We use it to embed a orthographic camera to planes so that the wole system can rotate and move all at once.\n  */\n  useRelativeCoordinatesOf( object3D ){\n    // TODO: remove from an possibly existing parent first (if not scene)\n\n    object3D.add(this._camera);\n  }\n\n\n  /**\n  * Updates the camera frustrum for ortho cam, in order to change the width and heigh of its projection and keep a relativelly constant image no matter what zoom level we are using.\n  * @param {Number} ff -\n  */\n  updateOrthoCamFrustrum(ff){\n    this._camera.left = this._camera.left_orig * ff;\n    this._camera.right = this._camera.right_orig * ff;\n    this._camera.top = this._camera.top_orig * ff;\n    this._camera.bottom = this._camera.bottom_orig * ff;\n    //this._camera.updateProjectionMatrix();\n  }\n\n\n  /**\n  * Used for perspective cameras. If a Control is enabled, the center of rotatation (target) will also be set.\n  * @param {THREE.Vector3} pos - 3D position to look at and to turn around.\n  */\n  updateLookAt(pos){\n    this._camera.lookAt( pos.clone() );\n\n    if(this._control){\n      this._control.target = pos.clone();\n    }\n\n  }\n\n\n  /**\n  * Update the control. This control needs to be updated from an \"animate\" function (like every frames) but not from a render function.\n  * If the control is a TrackballControls, updateControl needs to be called at every loop.\n  */\n  updateControl(){\n    this._control.update();\n  }\n\n\n  /**\n  * If the control ( trackball) was initialized, it enables it.\n  * (Can be called even though it was already enabled, this is NOT a toggle)\n  */\n  enableControl(){\n    if(this._control){\n      if(!this._control.enabled){\n        this._control.enabled = true;\n      }\n    }\n  }\n\n\n  /**\n  * If the control (trackball) was initialized, it disables it.\n  * (Can be called even though it was already enabled, this is NOT a toggle)\n  */\n  disableControl(){\n    if(this._control){\n      if(this._control.enabled){\n        //console.log(\"mouse left \" + this._viewName);\n        this._control.enabled = false;\n      }\n    }\n  }\n\n\n  /**\n  * @returns {boolean} true if this view is using a trackball control (no matter if enabled or disabled). Return false if this view does not use any kind of controls.\n  */\n  isUsingControl(){\n    return !!this._control;\n  }\n\n\n  /**\n  * Ask if a specific normalized coordinates are in the window boundaries of this view.\n  * @param {Number} x - horizontal coordinate normalized to the screen, so within [0, 1]. Origin on the left.\n  * @param {Number} y - vertical coordinate normalized to the screen, so within [0, 1]. Origin on the bottom.\n  * @returns true if (x, y) are\n  */\n  isInViewWindow(x, y){\n    return x > this._config.left && y > this._config.bottom &&\n      x < (this._config.left + this._config.width) &&\n      y < (this._config.bottom + this._config.height);\n  }\n\n\n  /**\n  * Enable a layer index for the camera of this view.\n  * @param {Number} layerNum - index of the layer.\n  */\n  enableLayer( layerNum ){\n    this._camera.layers.enable( layerNum );\n\n  }\n\n\n  /**\n  * Disable a layer index for the camera of this view.\n  * @param {Number} layerNum - index of the layer.\n  */\n  disableLayer( layerNum ){\n    this._camera.layers.disable( layerNum );\n  }\n\n\n  /**\n  * Return the camera of this view (unsafe, can be changed).\n  */\n  getCamera(){\n    return this._camera;\n  }\n\n\n  /**\n  * Update the ratio of the camera.\n  * Most likely to happen when the windows is resized.\n  * Depends if the cam is ortho of persp.\n  */\n  updateRatio(w, h){\n\n    if(this._isPerspective){\n      this._camera.aspect = w / h ;\n      this._camera.updateProjectionMatrix();\n    }else{\n      var wRatio = this._windowSize.width / window.innerWidth;\n      var hRatio = this._windowSize.height / window.innerHeight;\n\n      this._camera.left /= wRatio;\n      this._camera.right /= wRatio;\n      this._camera.top /= hRatio;\n      this._camera.bottom /= hRatio;\n    }\n\n    this._windowSize.width = window.innerWidth;\n    this._windowSize.height = window.innerHeight;\n  }\n\n\n  /**\n  * @return true if the camera of this view is a perspective camera.\n  */\n  isPerspective(){\n    return this._isPerspective;\n  }\n\n\n  /**\n  * @param {String} name of the config param to get. Must be \"left\", \"bottom\", \"width\", \"height\", \"position\" or \"up\". The 4 firsts being window settings, while the 2 lasts are camera settings. Read only.\n  * @return {Number} the value of the parameter\n  */\n  getConfigParam( paramName ){\n\n    if(paramName in this._config){\n      return this._config[ paramName ]\n    }else{\n      console.warn(paramName + \" param does not exist in the config.\");\n      return null;\n    }\n  }\n\n\n} /* END QuadView */\n\nexport { QuadView };\n","'use strict';\n\n/**\n* Contains only static methods to load various kind of data with an AJAX request.\n*/\nclass AjaxFileLoader{\n\n  /**\n  * Loads a text file and makes its content available thru a String.\n  * @param {String} url - URL of the file to load\n  * @param {callback} successCallback - function to call when the file is loaded. Called with one String argument.\n  * @param {callback} errorCallback - function to call when the file failed to load. Called with a Number argument (http status).\n  */\n  static loadTextFile(url, successCallback, errorCallback) {\n    var xhr = typeof XMLHttpRequest != 'undefined'\n      ? new XMLHttpRequest()\n      : new ActiveXObject('Microsoft.XMLHTTP');\n\n    xhr.open('GET', url, true);\n\n    xhr.onload = function() {\n      var status;\n      var data;\n\n      if (xhr.readyState == 4) { // `DONE`\n        status = xhr.status;\n        if (status == 200) {\n          successCallback && successCallback(xhr.responseText);\n        } else {\n          errorCallback && errorCallback(status);\n        }\n      }\n    };\n\n    xhr.onerror = function(e){\n      errorCallback && errorCallback(status);\n    }\n\n    xhr.send();\n  }\n\n\n\n  static loadCompressedTextFile(url, successCallback, errorCallback) {\n    if(! AjaxFileLoader.isPakoAvailable()){\n      errorCallback(\"Pako lib is not available, please include it to your project.\")\n      return;\n    }\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n\n    xhr.onload = function (oEvent) {\n\n      var status = xhr.status;\n      var arrayBuffer = xhr.response;\n\n      if (arrayBuffer) {\n        var unzipped = pako.inflate(arrayBuffer);\n        var result = unzipped.buffer;\n        var blob = new Blob([result]);\n        var fileReader = new FileReader();\n\n        fileReader.onload = function(event) {\n          //console.log(event.target.result.length);\n          successCallback && successCallback(event.target.result);\n        };\n\n        fileReader.onerror = function(event){\n          errorCallback && errorCallback(event);\n        }\n\n        fileReader.readAsText(blob);\n      }\n    };\n\n    xhr.onerror = function(e){\n      console.error(\"Can't find the file \" + url);\n      errorCallback && errorCallback(status);\n    }\n\n    xhr.send(null);\n\n  }\n\n\n  /**\n  * Check if Pako lib (for reading gz files) is available.\n  * @return true if available, or false if not\n  */\n  static isPakoAvailable(){\n    var isIt = true;\n\n    try{\n      pako;\n    }catch(e){\n      console.warn(e);\n      isIt = false;\n    }\n\n    return isIt;\n  }\n\n\n}/* END CLASS AjaxFileLoader */\n\nexport { AjaxFileLoader };\n","'use strict';\n\n\n/**\n* Generic interface to load texture and give them to the TextureChunk\n*/\nclass TextureLoaderInterface{\n\n  constructor( textureChunk ){\n    this._textureChunk = textureChunk;\n  }\n\n} /* END class TextureLoaderInterface */\n\nexport { TextureLoaderInterface };\n","'use strict';\n\nimport { TextureLoaderInterface } from './TextureLoaderInterface.js';\n\n\n/**\n* A TextureLoaderOctreeTiles is a specialization of TextureLoaderInterface. It loads a texture for a texture chunk directly from a image file in an octree 3D tiling architecture.\n*/\nclass TextureLoaderOctreeTiles extends TextureLoaderInterface{\n\n  constructor( textureChunk ){\n    super(textureChunk);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Fetch some data from the this._textureChunk to build the name of the texture file\n  */\n  _buildFileName(){\n    // load some data from the texture chunk\n    let index3D = this._textureChunk.getIndex3D();\n    let voxelPerSide = this._textureChunk.getVoxelPerSide();\n    let workingDir = this._textureChunk.getWorkingDir();\n    let resolutionLevel = this._textureChunk.getResolutionLevel();\n\n    let sagitalRangeStart = index3D[0] * voxelPerSide;\n    let coronalRangeStart = index3D[1] * voxelPerSide;\n    let axialRangeStart   = index3D[2] * voxelPerSide;\n\n    /** Texture file, build from its index3D and resolutionLevel */\n\n    // build the filepath\n    var filepath =  workingDir + \"/\" + resolutionLevel + \"/\" +\n                  sagitalRangeStart + \"-\" + (sagitalRangeStart + voxelPerSide) + \"/\" +\n                  coronalRangeStart + \"-\" + (coronalRangeStart + voxelPerSide) + \"/\" +\n                  axialRangeStart   + \"-\" + (axialRangeStart + voxelPerSide);\n\n    return filepath;\n  }\n\n\n  /**\n  * Load the octree image as a THREE.Texture and set it in the TextureChunk object\n  */\n  loadTexture(){\n    // first, we need it's filename to get it from the octree\n    var filepath = this._buildFileName();\n    var that = this;\n\n    var threeJsTexture = new THREE.TextureLoader().load(\n      filepath, // url\n      function(){\n        // ensure we are using nearest neighbors\n        threeJsTexture.magFilter = THREE.NearestFilter;\n        threeJsTexture.minFilter = THREE.NearestFilter;\n\n        that._textureChunk.setTexture(threeJsTexture);\n        that._textureChunk.onTextureSuccessToLoad();\n      }, // on load\n      function(){}, // on progress, do nothing\n\n      function(){ // on error\n        that._textureChunk.onTextureFailedToLoad();\n      }\n    );\n\n  }\n\n\n} /* END class TextureLoaderOctreeTiles */\n\nexport { TextureLoaderOctreeTiles };\n","'use strict';\n\nimport { TextureLoaderOctreeTiles } from './TextureLoaderOctreeTiles.js';\n\n/*\n\n  TODO: give the possibility to clean/remove the texture object, and with a flag,\n  getting to know if it's still loaded or not. It can be interesting to do it for\n  an entire zoom level to free some memory when we are currently using another\n  zoom level.\n\n  NOTE: take into consideration that other zoom levels than the main/current are possibly in use due to minimap display.\n\n*/\n\n/**\n* Represent a cubic chunk of texture. Should be part of a {@link LevelManager}.\n*/\nclass TextureChunk{\n\n  /**\n  * Initialize a TextureChunk object, but still, buildFromIndex3D() or buildFromWorldPosition() needs to be called to properly position the chunk in world coord.\n  *\n  * @param {number} resolutionLevel - The level of resolution, the lower the level, the lower the resolution. Level n has a metric resolution per voxel twice lower/poorer than level n+1, as a result, level n has 8 time less chunks than level n+1, remember we are in 3D!.\n  * @param {Number} voxelPerSide - Number of pixel/voxel per side of the chunk, most likely 64.\n  * @param {Number} sizeWC - Size of the chunk in world coordinates. Most likely 1/2^resolutionLevel.\n  * @param {String} workingDir - The folder containing the config file (JSON) and the resolution level folder.\n  * @param {String} chunkID - the string ID this chunk has within the ChunkCollection. This is used by the callbacks when succeding or failing to load the texture file.\n  * @param {String} datatype - Type of data, but for now only \"octree_tiles\" is ok\n  * @param {Array} matrix3DSize - Number of chunks in each dimension [x, y, z] that are supposedly available.\n  */\n  constructor(resolutionLevel, voxelPerSide, sizeWC, workingDir, chunkID, datatype, matrix3DSize){\n    /** the string ID this chunk has within the ChunkCollection. This is used by the callbacks when succeding or failing to load the texture file */\n    this._chunkID = chunkID;\n\n    this._matrix3DSize = matrix3DSize;\n\n    /** Number of voxel per side of the chunk (suposedly cube shaped). Used as a constant.*/\n    this._voxelPerSide = voxelPerSide;//64;\n\n    this._workingDir = workingDir;\n\n    /**\n    * The level of resolution, the lower the level, the lower the resolution. Level n has a metric resolution per voxel twice lower/poorer than level n+1, as a result, level n has 8 time less chunks than level n+1 (remember we are in 3D!).\n    */\n    this._resolutionLevel = resolutionLevel;\n\n    /** Size of a chunk in 3D space (aka. in world coordinates) */\n    this._sizeWC = sizeWC; //this._chunkSizeLvlZero / Math.pow(2, this._resolutionLevel);\n\n    /** The actuall THREE.Texture */\n    this._threeJsTexture = null;\n\n    /** True only if totally build, with index and world coordinates origin */\n    this._isBuilt = false;\n\n    /** in case the texture file was unable to load, this flag goes true */\n    this._textureLoadingError = false;\n    this._triedToLoad = false;\n\n    /** callback when a texture is successfully load. Defined using onTextureLoaded( ... ) */\n    this._onTextureLoadedCallback = null;\n\n    /** callback when a texture failled to be loaded. Defined using onTextureLoadError( ... ) */\n    this._onTextureLoadErrorCallback = null;\n\n    /** The texture loader takes _this_ in argument because it will need some local info but depending on the datatype, different info may be asked */\n    this._textureLoader = null;\n\n    // the data is stored as an octree 3D tiling structure\n    if(datatype == \"precomputed_octree_tiles\")\n      this._textureLoader = new TextureLoaderOctreeTiles( this );\n\n  }\n\n\n  /**\n  * @return this._voxelPerSide\n  */\n  getVoxelPerSide(){\n    return this._voxelPerSide;\n  }\n\n  /**\n  * @return a copy of the this_index3D (Array)\n  */\n  getIndex3D(){\n    return this._index3D.slice();\n  }\n\n\n  /**\n  * @return the working directory\n  */\n  getWorkingDir(){\n    return this._workingDir;\n  }\n\n\n  /**\n  * @return the resolution level\n  */\n  getResolutionLevel(){\n    return this._resolutionLevel;\n  }\n\n\n  /**\n  * Set the texture\n  * @param {THREE.Texture} t - Texture loaded by a TextureLoader\n  */\n  setTexture(t){\n    this._threeJsTexture = t;\n  }\n\n\n  /**\n  * Has to be called explicitely just after the constructor (unless you call buildFromWorldPosition() instead). Finishes to build the chunk.\n  * @param {Array} index3D - The index position in the octree. Each members [x, y, z] are interger.\n  */\n  buildFromIndex3D(index3D){\n    /**\n    * The index position in the octree. Each members are interger.\n    */\n    this._index3D = index3D.slice();\n    this._findChunkOrigin();\n\n\n    // try to load only if never tried\n    if( !this._triedToLoad){\n      this._textureLoader.loadTexture();\n      //this._loadTextureDecode();\n    }\n\n    this._isBuilt = true;\n  }\n\n\n  /**\n  * [PRIVATE] Finds a chunk origin using its _index3D and _sizeWC.\n  * the origin is used by the shader.\n  */\n  _findChunkOrigin(){\n    /**\n    * Origin of the chunk in world cooridnates. Is a [x, y, z] Array.\n    * Is computed from the sizeWC and the index3D\n    */\n\n    this._originWC = new THREE.Vector3(\n      this._index3D[0] * this._sizeWC,\n      this._index3D[1] * this._sizeWC,\n      this._index3D[2] * this._sizeWC\n    );\n\n  }\n\n\n  /**\n  * Called by a TextureLoader when the texture is loaded successfully\n  */\n  onTextureSuccessToLoad(){\n    //console.log('SUCCESS LOAD: ' + this._filepath );\n    this._textureLoadingError = false;\n    this._triedToLoad = true;\n\n    // calling the success callback if defined\n    if( this._onTextureLoadedCallback ){\n      this._onTextureLoadedCallback( this._chunkID );\n    }\n  }\n\n\n  /**\n  * called by a TextureLoader when the texture fails to load\n  */\n  onTextureFailedToLoad(){\n    //console.log('ERROR LOAD: ' + this._filepath );\n    this._threeJsTexture = null;\n    this._textureLoadingError = true;\n    this._triedToLoad = true;\n\n    // call the fallure callback if exists\n    if( this._onTextureLoadErrorCallback ){\n      this._onTextureLoadErrorCallback( this._chunkID );\n    }\n  }\n\n\n  /**\n  * Alternative to _loadTexture but decode the jpeg strip in JS using a JS lib.\n  * It's pretty slow and should maybe be put in a webworker -- to be tested!\n  */\n  _loadTextureDecode(){\n    var that = this;\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', this._filepath);\n    xhr.responseType = 'arraybuffer';\n\n    xhr.onload = function () {\n\n      var encoded = new Uint8Array(xhr.response);\n      var numComponents, width, height, decoded, parser;\n\n      parser = new JpegDecoder();\n      parser.parse(encoded);\n      width = parser.width;\n      height = parser.height;\n      numComponents = parser.numComponents;\n      decoded = parser.getData(width, height);\n\n      that._threeJsTexture = new THREE.DataTexture(\n        decoded,\n        width,\n        height,\n        //THREE.RGBFormat\n        THREE.LuminanceFormat\n        //THREE.UnsignedByteType\n      );\n\n      that._threeJsTexture.magFilter = THREE.NearestFilter;\n      that._threeJsTexture.minFilter = THREE.NearestFilter;\n      that._threeJsTexture.flipY = true;\n      that._threeJsTexture.needsUpdate = true;\n\n      //console.log('SUCCESS LOAD: ' + that._filepath );\n      that._textureLoadingError = false;\n      that._triedToLoad = true;\n\n      // calling the success callback if defined\n      if( that._onTextureLoadedCallback ){\n        //console.log(\"call the callback\");\n        that._onTextureLoadedCallback( that._chunkID );\n      }\n\n    };\n\n    xhr.onerror = function(){\n      //console.log('ERROR LOAD: ' + that._filepath );\n      that._threeJsTexture = null;\n      that._textureLoadingError = true;\n      that._triedToLoad = true;\n\n      // call the fallure callback if exists\n      if( that._onTextureLoadErrorCallback ){\n        that._onTextureLoadErrorCallback( that._chunkID );\n      }\n    }\n\n    xhr.send();\n\n\n\n\n\n\n\n\n\n\n\n\n  }\n\n\n\n  /**\n  * Returns an object contain the THREE.Texture, the origin as an array [x, y, z]\n  * and a boolean specifying the validity.\n  * @return {Object}\n  */\n  getChunkTextureData(){\n    return {\n      texture: this._threeJsTexture,\n      origin: this._originWC,\n      valid: !this._textureLoadingError\n    }\n  }\n\n\n  /**\n  * @return {String} the current texture filepath to load.\n  */\n  getTextureFilepath(){\n    return this._filepath;\n  }\n\n\n  /**\n  * Return true if the chunk was not able to load its texture.\n  */\n  loadingError(){\n    return this._textureLoadingError;\n  }\n\n\n  /**\n  * @param {callback function} cb - Callback to be called when the texture file corresponding to the chunk is successfully loaded.\n  */\n  onTextureLoaded(cb){\n    this._onTextureLoadedCallback = cb;\n  }\n\n\n  /**\n  * @param {callback function} cb - Callback to be called when the texture file corresponding to the chunk fails to be loaded.\n  */\n  onTextureLoadError(cb){\n    this._onTextureLoadErrorCallback = cb;\n  }\n\n\n} /* END CLASS TextureChunk */\n\nexport { TextureChunk };\n","'use strict';\n\n/*\n  TODO: replace all var by let\n*/\n\nimport { TextureChunk } from './TextureChunk.js';\n\n/**\n* The Chunk Collection is the container for all the chunks at a given resolution level.\n* The resolutionLevel goes from 0 to 6, 0 being the poorer and 6 the sharper.\n* ChunkCollection should not be asked anything directly, {@link LevelManager} should be the interface for that.\n*/\nclass ChunkCollection{\n\n  /**\n  * Constructor\n  * @param {number} resolutionLevel - The level of resolution, the lower the level, the lower the resolution. Level n has a metric resolution per voxel twice lower/poorer than level n+1, as a result, level n has 8 time less chunks than level n+1, remember we are in 3D!.\n  * @param {Array} matrix3DSize - Number of chunks in each dimension [x, y, z] that are supposedly available.\n  * @param {String} workingDir - The folder containing the config file (JSON) and the resolution level folder\n  * @param {String} datatype - Type of data, but for now only \"octree_tiles\" is ok.\n  */\n  constructor(resolutionLevel, matrix3DSize, workingDir, datatype){\n    /**\n    * The chunks of the same level. A map is used instead of an array because the chunks are loaded as they need to display, so we prefer to use an key (string built from the index3D) rather than a 1D array index.\n    */\n    this._chunks = {};\n\n    this._datatype = datatype;\n\n    /** The folder containing the config file (JSON) and the resolution level folder */\n    this._workingDir = workingDir;\n\n    /** Number of chunks in each dimension [x, y, z] that are supposedly available. */\n    this._matrix3DSize = matrix3DSize;\n\n    /** Level from 0 to 6, possibly more in the future. */\n    this._resolutionLevel = resolutionLevel;\n\n    /** Word size of a chunk at level 0. Used as a constant. */\n    this._chunkSizeLvlZero = 1;\n\n    /** Number of voxel per side of the chunk (suposedly cube shaped). Used as a constant.*/\n    this._voxelPerSide = 64;\n\n    /** Size of a chunk in 3D space (aka. in world coordinates) */\n    this._sizeChunkWC = this._chunkSizeLvlZero / Math.pow(2, this._resolutionLevel);\n\n    // Creates a fake texture and fake texture data to be sent to the shader in case it's not possible to fetch a real data (out of bound, unable to load texture file)\n    this._createFakeTexture();\n\n    /** Keeps a track of how many textures are supposed to be loaded, how many failed to load and how many eventually loaded successfully */\n    this._chunkCounter = {\n      toBeLoaded: 0,\n      loaded: 0,\n      failled: 0\n    }\n\n    this._onChunksLoadedCallback = null;\n\n  }\n\n\n  /**\n  * [PRIVATE] init the chunk for the given index3D. Adds it to the collection AND returns it in case of immediate need.\n  * @param {Array} index3D - [x, y, z] index of the chunk, where x, y and z are integer.\n  * Does not perform any kind of verification (already exists, out of bound, etc.).\n  * @return {TextureChunk} the newly created texture chunk.\n  */\n  _initChunkFromIndex3D(index3D){\n    var that = this;\n    var k = this.getKeyFromIndex3D(index3D);\n\n    // add a chunk\n    this._chunks[k] = new TextureChunk(\n      this._resolutionLevel,\n      this._voxelPerSide,\n      this._sizeChunkWC,\n      this._workingDir,\n      k,\n      this._datatype,\n      this._matrix3DSize\n    );\n\n    // callback on the texture when succesfully loaded\n    this._chunks[k].onTextureLoaded(function(chunkID){\n      that._countChunks( chunkID, true );\n    });\n\n    // callback on the texture when failed to load\n    this._chunks[k].onTextureLoadError(function(chunkID){\n      that._countChunks( chunkID, false );\n    });\n\n    // build it properly\n    this._chunks[k].buildFromIndex3D(index3D);\n\n    // increment the counter\n    this._chunkCounter.toBeLoaded ++;\n\n    return this._chunks[k];\n  }\n\n\n  /**\n  * @return the size of chunks in world coord in this collection\n  */\n  getSizeChunkWc(){\n    return this._sizeChunkWC;\n  }\n\n  /**\n  * Get a chunk at a given position, not necessary the origin\n  */\n  getTextureAtPosition(position){\n    var index3D = this.getIndex3DFromWorldPosition(position);\n    return this.getTextureAtIndex3D(index3D);\n  }\n\n\n  /**\n  * Get the THREE.Texture for the chunk at index3D. Build the chunk if it's not already done.\n  * @param {Array} index3D - [x, y, z] index of the chunk, where x, y and z are integer.\n  * @return {THREE.Texture} Possibly a fake texture if we are asking out of bound.\n  */\n  getTextureAtIndex3D(index3D){\n    var texture = this._fakeTextureData;\n\n    // the required is within boundaries\n    if( this.isWithinBounds(index3D) ){\n\n      // fetch the chunk\n      var chunk = this._getChunkIfInCollection(index3D);\n\n      // if the chunk is not already in collection, we load it.\n      if(!chunk){\n        chunk = this._initChunkFromIndex3D(index3D);\n      }\n\n      // if the texture was successfully loaded.\n      // most likely to be true the first time the texture is loaded due\n      // to the async loading of the texture file.\n      if(!chunk.loadingError()){\n        texture = chunk.getChunkTextureData();\n      }\n    }\n\n    return texture;\n  }\n\n\n  /**\n  * Get the index3D from a arbitrary world position.\n  * @param {Array} position - [x, y, z] arbitrary position.\n  * @return {Array} the index3D, made of integer.\n  *\n  * TODO: if we add an offset, it's here!\n  */\n  getIndex3DFromWorldPosition(position){\n\n    var index3D = [\n      Math.floor(position[0] / this._sizeChunkWC),\n      Math.floor(position[1] / this._sizeChunkWC),\n      Math.floor(position[2] / this._sizeChunkWC)\n    ];\n\n    /*\n    if(position[0] >=0 && position[1] >=0 && position[2] >=0 &&\n       position[0]<1.609 && position[1]<1.81 && position[2]<1.406 &&\n       this._sizeChunkWC == 0.5){\n\n      console.log(\"------------------------------------\");\n      console.log(this._sizeChunkWC);\n      console.log(this._matrix3DSize);\n      console.log(position);\n      console.log(index3D);\n    }\n    */\n\n    return index3D;\n  }\n\n\n  /**\n  * Check if a chunk was already created in the map.\n  * @param {Array} index3D - [x, y, z] index of the chunk, where x, y and z are integer.\n  * @return {Boolean} - true if the chunk is already in the colletion, return false if not.\n  */\n  isInCollection(index3D){\n    var k = this.getKeyFromIndex3D(index3D);\n    return (k in this._chunks);\n  }\n\n  /**\n  * [PRIVATE]\n  * return the chunk at index3D if it was initialized. Return null if not yet created.\n  * @param {Array} index3D - [x, y, z] index of the chunk, where x, y and z are integer.\n  * @return {object} A chunk of null.\n  */\n  _getChunkIfInCollection(index3D){\n    var k = this.getKeyFromIndex3D(index3D);\n\n    if( k in this._chunks){\n      return this._chunks[k];\n    }else{\n      return null;\n    }\n\n  }\n\n\n  /**\n  * @return underscore joined index3D as a string\n  */\n  getKeyFromIndex3D(index3D){\n    return index3D.join(\"_\");\n  }\n\n\n  /**\n  * Check if a chunk is within the bounds in term of indexing.\n  * @param {Array} index3D - [x, y, z] index of the chunk, where x, y and z are integer.\n  * @return {Boolean} - true if within bounds, false if not.\n  */\n  isWithinBounds(index3D){\n\n    if( index3D[0] < 0 || index3D[0] >= this._matrix3DSize[0] ||\n        index3D[1] < 0 || index3D[1] >= this._matrix3DSize[1] ||\n        index3D[2] < 0 || index3D[2] >= this._matrix3DSize[2] ){\n      return false;\n    }else{\n      return true;\n    }\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Creates a fake texture of size 1 to send to the shader in case we are\n  * out of bound or to complete the Sampler2D array for the fragment shader.\n  */\n  _createFakeTexture(){\n\n    this._fakeTextureData = {\n      texture: new THREE.DataTexture(\n          new Uint8Array(1),\n          1,\n          1,\n          THREE.LuminanceFormat,  // format, luminance is for 1-band image\n          THREE.UnsignedByteType  // type for our Uint8Array\n        ),\n      origin: new THREE.Vector3(0, 0, 0),\n      validity: false\n    };\n\n  }\n\n\n  /**\n  * Get the 8 indexes that are the closest to an arbitrary position.\n  * (because we send 8 Sampler2D to the fragment shader)\n  * @param {Array} position - An arbitrary position in world coordinates.\n  * @return {Array} heigh times [x, y, z] in no specific order.\n  */\n  _get8ClosestToPositions(position){\n\n    var localChunk = this.getIndex3DFromWorldPosition(position);\n\n    var closest = [\n      Math.abs(position[0] % this._sizeChunkWC) > this._sizeChunkWC / 2 ?\n        localChunk[0] + Math.sign(position[0]) :\n        localChunk[0] - Math.sign(position[0]),\n\n      Math.abs(position[1] % this._sizeChunkWC) > this._sizeChunkWC / 2 ?\n        localChunk[1] + Math.sign(position[1]) :\n        localChunk[1] - Math.sign(position[1]),\n\n      Math.abs(position[2] % this._sizeChunkWC) > this._sizeChunkWC / 2 ?\n        localChunk[2] + Math.sign(position[2]) :\n        localChunk[2] - Math.sign(position[2]),\n    ];\n\n\n    // build the chunk index of the 8 closest chunks from position\n    var indexes3D = [\n      [\n        localChunk[0],\n        localChunk[1],\n        localChunk[2]\n      ],\n      [\n        localChunk[0],\n        localChunk[1],\n        closest[2]\n      ],\n      [\n        localChunk[0],\n        closest[1],\n        localChunk[2]\n      ],\n      [\n        localChunk[0],\n        closest[1],\n        closest[2]\n      ],\n      [\n        closest[0],\n        localChunk[1],\n        localChunk[2]\n      ],\n      [\n        closest[0],\n        localChunk[1],\n        closest[2]\n      ],\n      [\n        closest[0],\n        closest[1],\n        localChunk[2]\n      ],\n      [\n        closest[0],\n        closest[1],\n        closest[2]\n      ],\n    ]\n\n    return indexes3D;\n  }\n\n  /**\n  * return the 8 texture data for the 8 closest chunks to the given position.\n  * The texture data are ordered so that if some are invalid (out of bound, fake texture) they will be placed in the end of the array.\n  * @param {Array} position - An arbitrary position in world coordinates.\n  * @return {object} the object contains 1 array of textures, one array of chunks origins and one integer to inform how many of these textures are valid. This may seem a strange data structure but it's the closest from what can take the fragment shader and will require no further work. Remember we are potentially speaking of thousands of chunks being loaded!\n  */\n  get8ClosestTextureData(position){\n    var the8closestIndexes = this._get8ClosestToPositions(position);\n    var validChunksCounter = 0;\n    var validChunksTexture = [];\n    var notValidChunksTexture = [];\n    var validChunksOrigin = [];\n    var notValidChunksOrigin = [];\n    var that = this;\n\n    the8closestIndexes.forEach(function(index){\n      var aTextureData = that.getTextureAtIndex3D(index);\n\n      // this texture data is valid\n      if(aTextureData.valid){\n        validChunksTexture.push( aTextureData.texture );\n        validChunksOrigin.push( aTextureData.origin );\n      }\n      // is not valid\n      else{\n        notValidChunksTexture.push( aTextureData.texture );\n        notValidChunksOrigin.push( aTextureData.origin );\n      }\n\n    });\n\n    validChunksCounter = validChunksTexture.length;\n\n    return {\n      textures: validChunksTexture.concat( notValidChunksTexture ),\n      origins: validChunksOrigin.concat( notValidChunksOrigin ),\n      nbValid: validChunksCounter\n    };\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Called when a chunk is loaded or failed to load. When to total number number of toLoad Vs. Loaded+failed is equivalent, a callback may be called (with no argument) if defined by onChunkLoaded().\n  * @param {String} chunkID - the id to identify the chunk within the collection\n  * @param {Boolean} success - must be true if loaded with success, or false if failed to load.\n  */\n  _countChunks(chunkID, success){\n    this._chunkCounter.loaded += (+ success);\n    this._chunkCounter.failled += (+ (!success));\n\n    // all the required chunks are OR loaded OR failled = they all tried to load.\n    if( (this._chunkCounter.loaded + this._chunkCounter.failled) == this._chunkCounter.toBeLoaded ){\n      //console.log(\">> All required chunks are loaded (lvl: \" + this._resolutionLevel + \")\");\n      console.log(\">> All required chunks are loaded\");\n    }\n\n    // call a callback if defined\n    if( this._onChunksLoadedCallback ){\n      this._onChunksLoadedCallback(this._resolutionLevel, (this._chunkCounter.toBeLoaded - this._chunkCounter.loaded - this._chunkCounter.failled));\n    }\n  }\n\n\n  /**\n  * Defines a callback for when all the requested chunks are loaded.\n  * This will be called every time we ask for a certain number of chunks and they eventually all have a loading status (success or fail)\n  * @param {callback function} cb - function to call with 2 params: the rez lvl, remaining tiles to load\n  */\n  onChunkLoaded(cb){\n    this._onChunksLoadedCallback = cb;\n  }\n\n\n} /* END CLASS ChunkCollection */\n\nexport { ChunkCollection };\n","'use strict';\n\nimport { AjaxFileLoader } from './AjaxFileLoader.js';\nimport { ChunkCollection } from './ChunkCollection.js';\n\n\n/**\n* The LevelManager is above the {@link ChunkCollection} and contain them all, one for each resolution level. LevelManager also acts like an interface to query chunk data.\n*/\nclass LevelManager{\n\n  /**\n  *\n  */\n  constructor(){\n\n    /**\n    * The array of ChunkCollection instances, one per resolution level.\n    */\n    this._chunkCollections = [];\n\n    /** the directory containing the config file (JSON) and the resolution level folders */\n    this._workingDir = \"\";\n\n    /** The level of resolution, defines which octree to dig into. Is a positive integer.  */\n    this._resolutionLevel = 0;\n\n\n    this.onReadyCallback = null;\n\n    /** Size of the bounding box that wraps the entire dataset */\n    this._boundingBox = null;\n\n    /** size of a chunk, considering it's always cubic */\n    this._chunkSize = [64, 64, 64]; // will be overwritten using the config file, but it will be 64 anyway.\n\n    this._onConfigErrorCallback = null;\n\n    this._levelsInfo = null;\n\n    this._onChunksLoadedCallback = null;\n  }\n\n\n  /**\n  * For testing purpose, this is a callback that will be called when the config\n  * file will be loaded.\n  */\n  onReady(cb){\n    this.onReadyCallback = cb;\n  }\n\n\n  /**\n  * Load the json config file with an XMLHttpRequest.\n  * @param {Object} config - {datatype: String, url: String} where datatype is the input data type (\"octree_tiles\" is the only available for the moment) and url is the URL of the JSON config file.\n  */\n  loadConfig(config){\n    var that = this;\n    var filepath = config.url;\n\n    AjaxFileLoader.loadTextFile(\n      // file URL\n      filepath,\n\n      // success callback\n      function(data){\n        // the directory of the config file is the working directory\n        that._workingDir = filepath.substring(0, Math.max(filepath.lastIndexOf(\"/\"), filepath.lastIndexOf(\"\\\\\")));\n\n        // Rading the config object\n        that._loadConfigDescription(config.datatype , JSON.parse(data));\n      },\n\n      // error callback\n      function(error){\n        console.error(\"Could not load config file \" + filepath);\n\n        // if loading the config file failed, we have a callback for that.\n        if(that._onConfigErrorCallback){\n          that._onConfigErrorCallback(filepath, 0);\n        }\n      }\n    )\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Load the config description object, sort its multiple resolution levels\n  * so that the poorer goes first and the finer goes last. Then, for each level\n  * calls _addChunkCollectionLevel().\n  * @param {String} datatype - Type of data, but for now only \"octree_tiles\" is ok.\n  * @param {Object} description - parsed from the JSON decription file.\n  */\n  _loadConfigDescription(datatype, description){\n    var that = this;\n\n    var levels = description.scales;\n    this._levelsInfo = description.scales;\n\n    // the description may contain more than one level (= multirez),\n    // if so, we sort by resolution so that 0 is the poorest and n is the finest\n    if(this._levelsInfo.length > 0){\n      this._levelsInfo.sort(function(a,b) {\n        if (a.resolution[0] > b.resolution[0]){\n          return -1;\n        }else {\n            return 1;\n        }\n      });\n    }\n\n    this._determineChunkSize(); // most likely 64 for every config anyway\n\n    // Compute the cube _boundingBox, that will give some sense of boundaries to the dataset\n    this._computeBoundingBox();\n\n    // add a chunk collection for each level\n    this._levelsInfo.forEach(function(elem, index){\n      that._addChunkCollectionLevel(index, elem.size, datatype);\n    });\n\n    if(this.onReadyCallback){\n      this.onReadyCallback();\n    }\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Adds a ChunkCollection instance to this._chunkCollections, corresponding to\n  * the resolution level in argument.\n  * @param {Number} resolutionLevel - positive integer (or zero)\n  * @param {Array} voxelSize - Entire number of voxel to form the whole 3D dataset at this level of resolution. This will be translated into the size of the 3D matrix of chunk (basically divided by 64 and rounded to ceil).\n  * @param {String} datatype - Type of data, but for now only \"octree_tiles\" is ok.\n  */\n  _addChunkCollectionLevel(resolutionLevel, voxelSize, datatype){\n    // translating voxelSize into matrix3DSize\n    // aka number of chunks (64x64x64) in each dimension\n    var matrix3DSize = [\n      Math.ceil( voxelSize[0] / this._chunkSize[0] ),\n      Math.ceil( voxelSize[1] / this._chunkSize[1] ),\n      Math.ceil( voxelSize[2] / this._chunkSize[2] )\n    ];\n\n    // creating a new chunk collection for this specific level\n    var chunkCollection = new ChunkCollection(\n      resolutionLevel,\n      matrix3DSize,\n      this._workingDir,\n      datatype\n    );\n\n    // dealing with some nested callback\n    if( this._onChunksLoadedCallback ){\n      chunkCollection.onChunkLoaded(this._onChunksLoadedCallback);\n    }\n\n    this._chunkCollections.push( chunkCollection );\n  }\n\n\n  onChunkLoaded( cb ){\n    this._onChunksLoadedCallback = cb;\n  }\n\n\n  /**\n  * Change the level of resolution. Boundaries and \"integrity\" are checked.\n  * @param {Number}\n  */\n  setResolutionLevel(lvl){\n    // TODO: here, we may want to trigger some garbage collecting work over the\n    // chunks that belongs to the previous lvl.\n\n    // make sure we dont have a float here!\n    var intergerLvl = Math.round(lvl) ;\n\n    // boundaries to the level\n    if(intergerLvl >= 0 && intergerLvl < this._chunkCollections.length){\n      this._resolutionLevel = intergerLvl;\n    }\n\n  }\n\n\n  /**\n  * @return the resolution level currently in use\n  */\n  getCurrentResolutionLevel(){\n    return this._resolutionLevel;\n  }\n\n\n  /**\n  * @return the size of the chunks currently in use, in world coord\n  */\n  getCurrentChunkSizeWc(){\n    return this._chunkCollections[ this._resolutionLevel ].getSizeChunkWc();\n  }\n\n\n  getChunkSizeWcByLvl(lvl){\n    return this._chunkCollections[ lvl ].getSizeChunkWc();\n  }\n\n\n  /**\n  * @param {Array} position - world coord position as an array [x, y, z]\n  * @return the texture data of the 8 chunks that are the closest to the position.\n  */\n  get8ClosestTextureData(position){\n    var the8ClosestTextureData = this._chunkCollections[ this._resolutionLevel ]\n              .get8ClosestTextureData(position);\n\n    //console.log(this._resolutionLevel + \" \" + position[0] + \" \" + position[1] + \" \" +position[2]);\n\n    return the8ClosestTextureData;\n  }\n\n\n  get8ClosestTextureDataByLvl(position, lvl){\n    var the8ClosestTextureData = this._chunkCollections[ lvl ]\n              .get8ClosestTextureData(position);\n\n    //console.log(this._resolutionLevel + \" \" + position[0] + \" \" + position[1] + \" \" +position[2]);\n\n    return the8ClosestTextureData;\n  }\n\n\n  /**\n  * Reads the chunk size from the config data. No matter the level, the chunk size should be the same, this is why we just take the first one.\n  * @param {Object} levels - config data\n  */\n  _determineChunkSize(){\n    this._chunkSize = this._levelsInfo[0].chunk_sizes[0];\n  }\n\n\n  /**\n  * The bounding box may be used for different things, like checking inside/outside or simply to show a bounding box with a box.\n  * The size data is available at every resolution level, we'll just take the info from the first level (0) since the size remains consistant all along.\n  * @param {Object} levels - config data\n  */\n  _computeBoundingBox(){\n    this._boundingBox = [\n      this._levelsInfo[0].size[0] / 64.0,\n      this._levelsInfo[0].size[1] / 64.0,\n      this._levelsInfo[0].size[2] / 64.0\n    ];\n  }\n\n\n  /**\n  * @returns {Array} a copy of the bounding box size as [xSize, ySize, zSize]\n  */\n  getBoundingBox(){\n    return this._boundingBox.slice();\n  }\n\n  /**\n  * @return {boolean} true if xyz is within the bounding box. Return false if outside.\n  * @param {Number} x - coordinate along x\n  * @param {Number} y - coordinate along y\n  * @param {Number} z - coordinate along z\n  */\n  isInside(x, y, z){\n    return (x>0 && x<this._boundingBox[0] && y>0 && y<this._boundingBox[1] && z>0 && z<this._boundingBox[2]);\n  }\n\n\n  /**\n  * Defines the callback called when the config file was not found/able to load.\n  * This callback will be called with 2 args:\n  *   {string} The config file url\n  *   {Number} The error code (most likely 0 rather than 404. Didn't dig why)\n  */\n  onConfigError(cb){\n    this._onConfigErrorCallback = cb;\n  }\n\n\n  /**\n  * Useful to get an info from the tileset config file.\n  * @param {Number} levelIndex - the index in the array\n  * @param {String} infoKey - One of the following \"chunk_sizes\", \"encoding\", \"key\", \"resolution\", \"size\" or \"voxel_offset\"\n  * @return depending on infoKey, the return value can be a String or an Array.\n  */\n  getLevelInfo(levelIndex, infoKey){\n    if( levelIndex>=0 &&\n        levelIndex<this._levelsInfo.length &&\n        infoKey in this._levelsInfo[levelIndex]){\n\n      return this._levelsInfo[ levelIndex ][ infoKey ];\n    }\n  }\n\n} /* END CLASS LevelManager */\n\n\nexport { LevelManager };\n","'use strict';\n\n\n\n/**\n* A OrientationHelper is a sphere surrounding the orthogonal planes that will show the direction of left/right, posterior/anterior and inferior/superior.\n*\n*/\nclass OrientationHelper{\n\n  /**\n  *\n  */\n  constructor( initRadius ){\n    this._sphere = new THREE.Object3D();\n\n    var xColor = 0xff3333;\n    var yColor = 0x00EB4E;\n    var zColor = 0x0088ff;\n\n    this._initRadius = initRadius;\n\n    var geometryX = new THREE.CircleGeometry( initRadius, 64 );\n    var geometryY = new THREE.CircleGeometry( initRadius, 64 );\n    var geometryZ = new THREE.CircleGeometry( initRadius, 64 );\n    var materialX = new THREE.LineBasicMaterial( { color: xColor, linewidth:1.5 } );\n    var materialY = new THREE.LineBasicMaterial( { color: yColor, linewidth:1.5 } );\n    var materialZ = new THREE.LineBasicMaterial( { color: zColor, linewidth:1.5 } );\n\n    // remove inner vertice\n    geometryX.vertices.shift();\n    geometryY.vertices.shift();\n    geometryZ.vertices.shift();\n\n    // X circle\n    var circleX = new THREE.Line( geometryX, materialX );\n    circleX.name = \"xCircle\";\n    geometryX.rotateY(Math.PI / 2);\n    // Y circle\n    var circleY = new THREE.Line( geometryY, materialY );\n    circleY.name = \"yCircle\";\n    geometryY.rotateX(-Math.PI / 2);\n    // Z circle\n    var circleZ = new THREE.Line( geometryZ, materialZ );\n    circleZ.name = \"zCircle\";\n\n    this._sphere = new THREE.Object3D();\n    this._sphere.add(circleX);\n    this._sphere.add(circleY);\n    this._sphere.add(circleZ);\n\n    // adding central lines\n    var xLineGeometry = new THREE.Geometry();\n    xLineGeometry.vertices.push(\n    \tnew THREE.Vector3( -initRadius, 0, 0 ),\n    \tnew THREE.Vector3( initRadius, 0, 0 )\n    );\n\n    var xLine = new THREE.Line(\n      xLineGeometry,\n      new THREE.LineBasicMaterial({\tcolor: xColor, linewidth:1.5 })\n    );\n\n    var yLineGeometry = new THREE.Geometry();\n    yLineGeometry.vertices.push(\n    \tnew THREE.Vector3(0, -initRadius, 0 ),\n    \tnew THREE.Vector3(0,  initRadius, 0 )\n    );\n\n    var yLine = new THREE.Line(\n      yLineGeometry,\n      new THREE.LineBasicMaterial({\tcolor: yColor, linewidth:1.5 })\n    );\n\n    var zLineGeometry = new THREE.Geometry();\n    zLineGeometry.vertices.push(\n    \tnew THREE.Vector3(0, 0, -initRadius ),\n    \tnew THREE.Vector3(0, 0,  initRadius )\n    );\n\n    var zLine = new THREE.Line(\n      zLineGeometry,\n      new THREE.LineBasicMaterial({\tcolor: zColor, linewidth:1.5 })\n    );\n\n    this._sphere.add( xLine );\n    this._sphere.add( yLine );\n    this._sphere.add( zLine );\n\n\n    // adding sprites with labels\n    var textureLoader = new THREE.TextureLoader();\n    var leftTex = textureLoader.load( \"textures/left.png\" );\n    var rightTex = textureLoader.load( \"textures/right.png\" );\n    var antTex = textureLoader.load( \"textures/anterior.png\" );\n    var postTex = textureLoader.load( \"textures/posterior.png\" );\n    var supTex = textureLoader.load( \"textures/superior.png\" );\n    var infTex = textureLoader.load( \"textures/inferior.png\" );\n\n    var leftSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: leftTex} ) );\n    var rightSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: rightTex} ) );\n    var antSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: antTex} ) );\n    var postSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: postTex} ) );\n    var supSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: supTex} ) );\n    var infSprite = new THREE.Sprite( new THREE.SpriteMaterial( { map: infTex} ) );\n\n    var distanceFromCenter = initRadius * 1.4;\n\n    leftSprite.position.set( distanceFromCenter, 0, 0 );\n    rightSprite.position.set( -distanceFromCenter, 0, 0 );\n    antSprite.position.set(0, distanceFromCenter, 0 );\n    postSprite.position.set(0, -distanceFromCenter, 0 );\n    supSprite.position.set(0, 0, -distanceFromCenter );\n    infSprite.position.set(0, 0, distanceFromCenter );\n\n    this._sphere.add(leftSprite);\n    this._sphere.add(rightSprite);\n    this._sphere.add(antSprite);\n    this._sphere.add(postSprite);\n    this._sphere.add(supSprite);\n    this._sphere.add(infSprite);\n\n    this._sphere.children.forEach( function(child){\n      child.layers.enable( 0 );\n      child.layers.enable( 1 );\n    });\n\n  }\n\n\n  /**\n  * Add the local helper mesh to obj.\n  * @param {THREE.Object3D} obj - container object to add the local helper.\n  */\n  addTo( obj ){\n    obj.add( this._sphere );\n  }\n\n\n  /**\n  * Rescale the helper with a given factor.\n  * @param {Number} f - a scaling factor, most likely within [0, 1]\n  */\n  rescale( f ){\n    this._sphere.scale.x = f;\n    this._sphere.scale.y = f;\n    this._sphere.scale.z = f;\n  }\n\n\n  /**\n  * Resize the helper depending on the resolution level\n  */\n  rescaleFromResolutionLvl( lvl ){\n    var scale = 1 / Math.pow( 2, lvl );\n    this._sphere.scale.x = scale;\n    this._sphere.scale.y = scale;\n    this._sphere.scale.z = scale;\n  }\n\n  /**\n  * Set the position of the orientation helper.\n  * @param {THREE.Vector3} vPos - The position as a vector to clone.\n  */\n  setPosition( vPos ){\n    this._sphere.position.x = vPos.x;\n    this._sphere.position.y = vPos.y;\n    this._sphere.position.z = vPos.z;\n  }\n\n  /**\n  * Show the helper if hidden, hide it if shown.\n  */\n  toggle(){\n    this._sphere.visible = !this._sphere.visible;\n  }\n\n\n  /**\n  * Set the visibility of the orientation Helpers\n  * @param {Boolean} b - true to show, false to hide\n  */\n  setVisibility( b ){\n    this._sphere.visible = b;\n  }\n\n\n  /**\n  * @return {Number} the actual radius of orientation helper, considering the ajustment to\n  * resolution level.\n  */\n  getRadius(){\n    return (this._initRadius * this._sphere.scale.x);\n  }\n\n\n} /* END class OrientationHelper */\n\n\nexport { OrientationHelper };\n","'use strict'\n\n/**\n* A QuadViewInteraction instance knows all the QuadView instance (aggregated in an array) and deals with all the interaction/controller side that a QuadView may need. This includes mouse/keyboard interaction on each view (independently) and possibly orbit/trackball control for QuadViews which enabled it.\n*\n*/\nclass QuadViewInteraction{\n\n  /**\n  * Build the QuadViewInteraction instance. Requires a list of QuadView instances.\n  * @param {Array of QuadView} QuadViewArray - an array of QuadView.\n  * @param {String} domContainerID - ID of the container\n  */\n  constructor(QuadViewArray, domContainerID=\"container\"){\n    this._quadViews = QuadViewArray;\n\n    this._windowSize = {\n      width: window.innerWidth ,\n      height: window.innerHeight\n    };\n\n    this._domContainer = document.getElementById(domContainerID);\n\n    // updated at every mousemove event by the QuadScene\n    this._mouse = {x:0, y:0};\n\n    this._mouseLastPosition = {x:-1, y:-1};\n\n    // distance traveled by the mouse, most likely between 2 mousemouve event\n    this._mouseDistance = {x:0, y:0};\n\n    // index of the quadview the mouse currently is\n    this._indexCurrentView = -1;\n\n    // index of the view the mouse was pressed\n    this._indexViewMouseDown = -1;\n\n    // updated by the mousedown/mouseup\n    this._mousePressed = false;\n\n    this._rKeyPressed = false;\n    this._tKeyPressed = false;\n    this._shiftKeyPressed = false;\n\n    // declaring mouse events\n    // (on a specific div to prevent conflict with ControlKit)\n    this._domContainer.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n    this._domContainer.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n    this._domContainer.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n    // declaring keyboard events\n    // (on document, otherwise it does not work)\n    //document.addEventListener( 'keydown', this._onKeyDown.bind(this), false);\n    //document.addEventListener( 'keyup', this._onKeyUp.bind(this), false);\n\n    this._domContainer.addEventListener( 'keydown', this._onKeyDown.bind(this), false);\n    this._domContainer.addEventListener( 'keyup', this._onKeyUp.bind(this), false);\n\n    // function to be called when the mouse is pressed on a view for translation - no R key pressed\n    this._onGrabViewTranslateCallback = null;\n\n    // function to be called when the mouse is pressed on a view for rotation - with R key pressed\n    this._onGrabViewRotateCallback = null;\n\n    // function called when user maintains click + T and moves mouse\n    this._onGrabViewTransverseRotateCallback = null;\n\n    // function called when user scrolls\n    this._onScrollViewCallback = null;\n\n    // function to call when the arrow up (keyboard) is down\n    this._onArrowUpCallback = null;\n\n    // function to call when the arrow down (keyboard) is down\n    this._onArrowDownCallback = null;\n\n    this._onDonePlayingCallback = null;\n\n    // (aggregation) container of planes\n    this._multiplaneContainer = null;\n\n    // to intersect with the multplane container\n    this._raycaster = new THREE.Raycaster();\n\n    this._onClickPlaneCallback = {\n      perspective: null,\n      ortho: null\n    }\n  }\n\n\n  /**\n  * Because we dont want to be querying window.innerWidth and window.innerHeight all the time.\n  * This is supposed to be called by a QuadScene, at the same moment we update the window size for the renderer.\n  * @param {Number} w - width of the window in pixel, most likely window.innerWidth\n  * @param {Number} h - height of the window in pixel, most likely window.innerHeight\n  */\n  updateWindowSize(w, h){\n    this._windowSize.width = w;\n    this._windowSize.height = h;\n\n    this._quadViews.forEach(function(qv){\n      qv.updateRatio();\n    });\n  }\n\n\n  /**\n  * Updates the position of the mouse pointer with x and y in [0, 1] with origin at the bottom left corner.\n  * Updating the mouse position may trigger some events like orbit/trackball control activation\n  */\n  _onMouseMove( event ) {\n    this._mouse.x = (event.clientX / this._windowSize.width);\n    this._mouse.y = 1 - (event.clientY / this._windowSize.height);\n    this._manageQuadViewsMouseActivity();\n\n    // mouse pressed + moving\n    if(this._mousePressed){\n\n      // distance from the last update\n      this._mouseDistance.x = (this._mouse.x - this._mouseLastPosition.x)*this._windowSize.width / 100;\n      this._mouseDistance.y = (this._mouse.y - this._mouseLastPosition.y)*this._windowSize.height / 100;\n\n      // + R key down --> rotation\n      if(this._rKeyPressed){\n        var center = {\n          x: (this._indexViewMouseDown%2)*0.5 + 0.25,\n          y: (this._indexViewMouseDown>1?0:1)*0.5 +0.25,\n        };\n\n        var centerToPrevious = new THREE.Vector3(\n          this._mouseLastPosition.x - center.x,\n          this._mouseLastPosition.y - center.y,\n          this._mouseLastPosition.z - center.z\n        ).normalize();\n\n        var centerToCurrent = new THREE.Vector3(\n          this._mouse.x - center.x,\n          this._mouse.y - center.y,\n          this._mouse.z - center.z\n        ).normalize();\n\n        // the rotation angle (unsigned)\n        var angleRad = Math.acos( centerToPrevious.dot(centerToCurrent) );\n\n        // the rotation direction depends on the normal of the angle\n        var angleDirection = Math.sign( centerToPrevious.cross(centerToCurrent).z );\n\n        // call the callback for this kind of interaction\n        if(this._onGrabViewRotateCallback){\n          this._onGrabViewRotateCallback(angleRad, angleDirection, this._indexViewMouseDown);\n        }\n\n      }\n\n      // + T key down --> tranverse rotation\n      else if(this._tKeyPressed){\n\n        if(this._onGrabViewTransverseRotateCallback){\n          this._onGrabViewTransverseRotateCallback(this._mouseDistance, this._indexViewMouseDown);\n        }\n      }\n\n      // + NO key down --> translation\n      else{\n        if(this._onGrabViewTranslateCallback){\n          this._onGrabViewTranslateCallback(this._mouseDistance, this._indexViewMouseDown);\n        }\n      }\n\n      // update the last position\n      this._mouseLastPosition.x = this._mouse.x;\n      this._mouseLastPosition.y = this._mouse.y;\n\n    } /* END  */\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * callback to the mousedown event\n  */\n  _onMouseDown( event ){\n    this._mousePressed = true;\n    this._indexViewMouseDown = this._indexCurrentView;\n\n\n    // Shift + click on the perspective cam =\n    if( this._shiftKeyPressed ){\n      //console.log(this._mouse);\n\n      this._intersectMultiplane( event );\n\n    }\n\n\n    // will be used as an init position\n    this._mouseLastPosition.x = this._mouse.x;\n    this._mouseLastPosition.y = this._mouse.y;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * callback to the mouseup event\n  */\n  _onMouseUp( event ){\n    this._mousePressed = false;\n    this._indexViewMouseDown = -1;\n\n    this._mouseDistance.x = 0;\n    this._mouseDistance.y = 0;\n\n    if(this._onDonePlayingCallback){\n      this._onDonePlayingCallback();\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Callback to the event onkeydown, aka. when a keyboard key is pressed\n  */\n  _onKeyDown( event ){\n\n    switch( event.key ){\n      case \"r\":\n        this._rKeyPressed = true;\n        break;\n      case \"t\":\n        this._tKeyPressed = true;\n        break;\n\n      case \"Shift\":\n        this._shiftKeyPressed = true;\n        break;\n\n      case \"ArrowDown\":\n        if(this._onArrowDownCallback){\n          this._onArrowDownCallback(this._indexCurrentView);\n        }\n        break;\n\n      case \"ArrowUp\":\n        if(this._onArrowUpCallback){\n          this._onArrowUpCallback(this._indexCurrentView);\n        }\n        break;\n\n      default:;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Callback to the event onkeyup, aka. when a keyboard key is released\n  */\n  _onKeyUp( event ){\n    switch( event.key ){\n      case \"r\":\n        this._rKeyPressed = false;\n        break;\n      case \"t\":\n        this._tKeyPressed = false;\n        break;\n      case \"Shift\":\n        this._shiftKeyPressed = false;\n        break;\n\n      default:;\n    }\n\n    if(this._onDonePlayingCallback){\n      this._onDonePlayingCallback();\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * For each QuadView instance, trigger things depending on how the mouse pointer interact with a quadview.\n  */\n  _manageQuadViewsMouseActivity(){\n    var that = this;\n    var x = this._mouse.x;\n    var y = this._mouse.y;\n\n    this._quadViews.forEach(function(qv, index){\n\n      // the pointer is within the QuadView window\n      if(qv.isInViewWindow(x, y)){\n\n        that._indexCurrentView = index;\n\n        // even though this quadview may not have any controller\n        qv.enableControl();\n      }\n      // the pointer is outside the QuadView window\n      else{\n\n        // even though this quadview may not have any controller\n        qv.disableControl();\n      }\n\n    });\n  }\n\n\n  /**\n  * Callback when one of the QuadView is grabed.\n  * The callback will be called with 2 arguments:\n  *   {Object} distance {x:, y: } - the distance along x and y in normalized space\n  *   {Number} QuadView index\n  */\n  onGrabViewTranslate(cb){\n    this._onGrabViewTranslateCallback = cb;\n  }\n\n\n  /**\n  * Defines the callback called when click on a view holding\n  * the R keyboard key and move the mouse.\n  * It performs a rotation around the normal vector of the current view/plane.\n  * The callback is called with 2 arguments:\n  *   {Number} angle in radian\n  *   {Number} direction, is 1-always +1 or -1\n  *   {Number} QuadView index\n  */\n  onGrabViewRotate(cb){\n    this._onGrabViewRotateCallback = cb;\n  }\n\n\n  /**\n  * Defines the callback called when click on a view holding the T keyboard key\n  * and move the mouse.\n  * It performs a transverse rotation.\n  *   {Object} distance {x:, y: } - the distance along x and y in normalized space\n  *   {Number} QuadView index\n  */\n  onGrabViewTransverseRotate(cb){\n    this._onGrabViewTransverseRotateCallback = cb;\n  }\n\n\n  /**\n  * Defines the callback for when the arrow_down keyboard key is down.\n  * Usually for travelling along the normal of the plane/view.\n  * Called with 1 argument:\n  *   {Number} QuadView index\n  */\n  onArrowDown(cb){\n    this._onArrowDownCallback = cb;\n  }\n\n\n  /**\n  * Defines the callback for when the arrow_up keyboard key is down.\n  * Usually for travelling along the normal of the plane/view.\n  * Called with 1 argument:\n  *   {Number} QuadView index\n  */\n  onArrowUp(cb){\n    this._onArrowUpCallback = cb;\n  }\n\n\n  /**\n  * Callback called when a key of a mouse button is released\n  */\n  onDonePlaying( cb ){\n    this._onDonePlayingCallback = cb;\n  }\n\n\n  /**\n  * Set the plane container, so that we can perform raycasting\n  */\n  setMultiplaneContainer( c ){\n    this._multiplaneContainer = c;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * perform a raycaster intersection from the perspective camera to the multiplane\n  * container.\n  * If impact, call a callback with the point coordinates.\n  */\n  _intersectMultiplane( ){\n\n    // size ratio to the whole window\n    var viewWidth = this._quadViews[this._indexViewMouseDown].getConfigParam(\"width\");\n    var widthRatio = 1 / viewWidth;\n    var viewHeight = this._quadViews[this._indexViewMouseDown].getConfigParam(\"height\");\n    var heightRatio = 1 / viewHeight;\n\n    var widthOffset = this._quadViews[this._indexViewMouseDown].getConfigParam(\"left\");\n    var heightOffset = this._quadViews[this._indexViewMouseDown].getConfigParam(\"bottom\");\n\n    // these coords are centered on the current view and are within [-1, 1]\n    var localCenteredMouse = new THREE.Vector2(\n      (this._mouse.x * widthRatio - widthOffset*widthRatio) * 2 - 1,\n      (this._mouse.y * heightRatio - heightOffset*heightRatio) * 2 - 1\n    )\n\n    this._raycaster.setFromCamera(\n      localCenteredMouse,\n      this._quadViews[this._indexViewMouseDown].getCamera()\n    );\n\n    var intersects = this._raycaster.intersectObject( this._multiplaneContainer, true );\n\n    if(intersects.length ){\n      if(this._quadViews[this._indexViewMouseDown].isPerspective()){\n        // a callback for persp cam\n        this._onClickPlaneCallback.perspective && this._onClickPlaneCallback.perspective( intersects[0].point );\n      }else{\n        // a callback for ortho cam\n        this._onClickPlaneCallback.ortho && this._onClickPlaneCallback.ortho( intersects[0].point );\n      }\n    }\n\n\n  }\n\n\n  /**\n  * Defines a callback for shift+clicking on a plane, depending on the camera type.\n  * @param {String} - camera type is \"ortho\" or \"perspective\"\n  * @param {Function} callback - is the method to be called\n  */\n  onClickPlane( cameraType, callback ){\n\n    if( !(cameraType in this._onClickPlaneCallback) ){\n      console.warn('The camera type must be \"perspective\" or \"ortho\".');\n      return;\n    }\n\n    this._onClickPlaneCallback[ cameraType ] = callback;\n  }\n  \n\n} /* END class QuadViewInteraction */\n\nexport { QuadViewInteraction };\n","'use strict';\n\nimport { AjaxFileLoader } from './AjaxFileLoader.js';\n\n/**\n* An instance of ColorMapManager is used to load color maps and retrive them.\n* A certain amount of default color maps is available but curtom maps can also be added.\n* Each texture is stored as a THREE.Texture and are loaded with THREE.TextureLoader.\n*/\nclass ColorMapManager{\n\n  /**\n  * Loads the default colormaps.\n  */\n  constructor( ){\n    // default folder where the default colormaps are stored\n    this._defaultMapFolder = \"\";\n\n    // the ones from the json config file\n    this._colormapsToLoad = [];\n\n    this._colormapSuccessCounter = 0;\n\n    // map of colormaps. The keys are colormap file (no extension) and the objects are THREE.Texture\n    this._colorMaps = {};\n\n    this._onColormapUpdateCallback = null;\n\n    // The current color map is defined by a name/id and a THREE.Texture\n    this._currentColormap = {id: \"none\", colormap: null};\n\n    // False to if we decide to use a colormap, true to use a colormap\n    this._isEnabled = false;\n\n    // single object to load all the textures\n    this._textureLoader = new THREE.TextureLoader();\n\n    this._colorMaps[\"none\"] = null;\n\n  }\n\n\n  /**\n  * Load a new colormap from a file and add it to the list.\n  * @param {String} filename - url or the colormap file.\n  * @param {bool} setCurrent - true to use this one as default, false not to.\n  */\n  _loadColormap(filename, setCurrent=true){\n    var that = this;\n\n    // get the basename (no extension)\n    var basename = new String(filename).substring(filename.lastIndexOf('/') + 1);\n    if(basename.lastIndexOf(\".\") != -1)\n        basename = basename.substring(0, basename.lastIndexOf(\".\"));\n\n    this._textureLoader.load(\n      filename,\n\n      // success\n      function ( texture ) {\n        that._colormapSuccessCounter ++;\n\n        // add to the map of colormaps\n        that._colorMaps[basename] = texture;\n\n        if(setCurrent){\n          // make it the current in use\n          that._currentColormap.id = basename;\n          that._currentColormap.colormap = texture;\n        }\n\n        if(that._colormapSuccessCounter == that._colormapsToLoad.length ){\n          that._onColormapUpdateCallback && that._onColormapUpdateCallback();\n        }\n\n      },\n\n      // Function called when download progresses\n      function ( xhr ) {\n        //console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n      },\n\n      // Function called when download errors\n      function ( xhr ) {\n        console.error( 'Failed to load ' + filename );\n      }\n\n    );\n\n  }\n\n\n  /**\n  * Load colormaps from a config file\n  * @param {String} config - the url to the config file for color maps\n  */\n  loadCollection( config ){\n    var that = this;\n    var jsonFilename = config.url;\n\n    AjaxFileLoader.loadTextFile(\n      jsonFilename,\n\n      // success in loading the json file\n      function( fileContent ){\n        that._defaultMapFolder = jsonFilename.substring(0, Math.max(jsonFilename.lastIndexOf(\"/\"), jsonFilename.lastIndexOf(\"\\\\\"))) + \"/\";\n\n        that._colormapsToLoad = JSON.parse(fileContent);\n\n        // load each colormap\n        that._colormapsToLoad.forEach( function(colormapFilename){\n          that._loadColormap(\n            that._defaultMapFolder + colormapFilename,\n            false\n          );\n        });\n      },\n\n      function(){\n        console.warn(\"Unable to load the colormap list file ( \" + jsonFilename + \" ).\");\n      }\n    )\n  }\n\n\n  /**\n  * @return the colormap that is currently in use as an object {id, colormap}\n  */\n  getCurrentColorMap(){\n    return this._currentColormap;\n  }\n\n\n  /**\n  * @returns true if a colormap is supposed to be used, returns false if not\n  */\n  isColormappingEnabled(){\n    return this._isEnabled;\n  }\n\n\n  /**\n  * Activates color mapping. If no colormap has ever been explicitly mentioned as \"in use\", then the first of the default colormaps is the one to go with.\n  */\n  enableColorMapping(){\n    this._isEnabled = true;\n  }\n\n\n  disableColorMapping(){\n    this._isEnabled = false;\n  }\n\n\n  /**\n  * @returns a list of available colormaps IDs.\n  */\n  getAvailableColormaps(){\n    return Object.keys( this._colorMaps );\n  }\n\n\n  /**\n  * Enable a colormap by a given ID.\n  * @param {String} id - the colormap ID must be valid.\n  * @return true if success, return false if fail\n  */\n  useColormap(id){\n\n    if(this._colorMaps.hasOwnProperty(id)){\n      this._currentColormap.id = id;\n      this._currentColormap.colormap = this._colorMaps[id];\n\n      if(id == \"none\"){\n        this.disableColorMapping();\n      }else{\n\n        // we considere that enabling a specific texture comes with\n        // enabling the colormapping\n        this.enableColorMapping();\n      }\n      return true;\n    }\n    return false;\n  }\n\n\n  onColormapUpdate(cb){\n    this._onColormapUpdateCallback = cb;\n  }\n\n\n} /* END class ColorMapManager */\n\nexport { ColorMapManager };\n","import texture3d_frag from './shaders/texture3d.frag.glsl';\nimport texture3d_vert from './shaders/texture3d.vert.glsl';\n\nexport var ShaderImporter = {\n\ttexture3d_frag: texture3d_frag,\n  texture3d_vert: texture3d_vert \n}\n","'use strict';\n\nimport { ShaderImporter } from './ShaderImporter.js';\n\n/**\n* A ProjectionPlane instance is a portion of a 3D plane, defined as a rectangular surface. It is subdivided in a certain amount of sub-planes that are square-shaped. Each sub-plane is the size of half a texture chunk of the current resolution level.\n* Example: if a texture chunk at level 3 is of size 1/8 x 1/8 x 1/8 in world coordinates, the csub-planes will be 1/16 x 1/16.\n* This ensure that we dont have to many texture (Sampler2D) to send the the fragment shader of each sub-planes because, even in critical cases, a sub-plane of this size wont intersect more than 8 texture chunks.\n*\n*/\nclass ProjectionPlane{\n\n  /**\n  * @param {Number} chunkSize - The size of a texture chunk at the current level of resolution (in world coordinates)\n  *\n  */\n  constructor( chunkSize, colormapManager ){\n    var that = this;\n\n    this._plane = new THREE.Object3D();\n    this._plane.name = \"projection plane\";\n\n    //this._subPlaneSize = chunkSize / 2; // ORIG\n    //this._subPlaneSize = chunkSize * 0.7; // OPTIM\n    this._subPlaneSize = chunkSize / Math.sqrt(2);\n\n    // list of subplanes\n    this._subPlanes = [];\n\n    // one shader material per sub-plane\n    this._shaderMaterials = [];\n\n    // number of rows and cols of sub-planes to compose the _plane\n\n    this._subPlaneDim = {row: 7, col: 15}; // OPTIM\n    //this._subPlaneDim = {row: 8, col: 17}; // TEST\n\n    // to be aggregated\n    this._colormapManager = colormapManager;\n\n    // given by aggregation\n    this._levelManager = null;\n\n    this._resolutionLevel = 0;\n\n    this._buildSubPlanes();\n  }\n\n\n  /**\n  * Build all the subplanes with fake textures and fake origins. The purpose is just to create a compatible data structure able to receive relevant texture data when time comes.\n  */\n  _buildSubPlanes(){\n    var that = this;\n\n    var subPlaneGeometry = new THREE.PlaneBufferGeometry( this._subPlaneSize, this._subPlaneSize, 1 );\n\n    // a fake texture is a texture used instead of a real one, just because\n    // we have to send something to the shader even if we dont have data\n    var fakeTexture = new THREE.DataTexture(\n        new Uint8Array(1),\n        1,\n        1,\n        THREE.LuminanceFormat,  // format, luminance is for 1-band image\n        THREE.UnsignedByteType  // type for our Uint8Array\n      );\n\n    var fakeOrigin = new THREE.Vector3(0, 0, 0);\n\n    var subPlaneMaterial_original = new THREE.ShaderMaterial( {\n      uniforms: {\n        // the textures\n        nbChunks: {\n          type: \"i\",\n          value: 0\n        },\n        textures: {\n          type: \"t\",\n          value: [  fakeTexture, fakeTexture, fakeTexture, fakeTexture,\n                    fakeTexture, fakeTexture, fakeTexture, fakeTexture]\n        },\n        // the texture origins (in the same order)\n        textureOrigins: {\n          type: \"v3v\",\n          value: [  fakeOrigin, fakeOrigin, fakeOrigin, fakeOrigin,\n                    fakeOrigin, fakeOrigin, fakeOrigin, fakeOrigin]\n        },\n        chunkSize : {\n          type: \"f\",\n          value: 1\n        },\n        colorMap : {\n          type: \"t\",\n          value: that._colormapManager.getCurrentColorMap().colormap\n        },\n        useColorMap : {\n          type: \"b\",\n          value: that._colormapManager.isColormappingEnabled()\n        }\n      }\n      ,\n      vertexShader: ShaderImporter.texture3d_vert,\n      fragmentShader: ShaderImporter.texture3d_frag,\n      side: THREE.DoubleSide,\n      transparent: true\n    });\n\n    for(var j=0; j<this._subPlaneDim.row; j++){\n      for(var i=0; i<this._subPlaneDim.col; i++){\n        var subPlaneMaterial = subPlaneMaterial_original.clone();\n        var mesh = new THREE.Mesh( subPlaneGeometry, subPlaneMaterial );\n\n        mesh.position.set(-this._subPlaneDim.col*this._subPlaneSize/2 + i*this._subPlaneSize + this._subPlaneSize/2, -this._subPlaneDim.row*this._subPlaneSize/2 + j*this._subPlaneSize + this._subPlaneSize/2, 0.0);\n\n        this._plane.add( mesh );\n        this._subPlanes.push( mesh );\n        this._shaderMaterials.push( subPlaneMaterial );\n      }\n    }\n\n  }\n\n\n  /**\n  * Defines the level manager so that the texture chunks can be fetched for each sub-plane.\n  * @param {LevelManager} lm - the level manager\n  */\n  setLevelManager(lm){\n    this._levelManager = lm;\n  }\n\n\n  /**\n  * Debugging. Chanfe the color of the mesh of the plane, bit first, the plane material has to be set as a mesh.\n  */\n  setMeshColor(c){\n    this._subPlanes[0].material.color = c;\n  }\n\n\n  /**\n  * fetch each texture info, build a uniform and\n  */\n  updateUniforms(){\n    var nbSubPlanes = this._subPlaneDim.row * this._subPlaneDim.col;\n    var textureData = 0;\n\n    for(var i=0; i<nbSubPlanes; i++){\n      // center of the sub-plane in world coordinates\n      var center = this._subPlanes[i].localToWorld(new THREE.Vector3(0, 0, 0));\n      //var chunkSizeWC = this._levelManager.getCurrentChunkSizeWc();\n\n      //textureData = this._levelManager.get8ClosestTextureData([center.x, center.y, center.z]);\n      textureData = this._levelManager.get8ClosestTextureDataByLvl(\n        [center.x, center.y, center.z],\n        this._resolutionLevel\n      );\n\n      this._updateSubPlaneUniform(i, textureData);\n    }\n\n  }\n\n\n  printSubPlaneCenterWorld(){\n    var nbSubPlanes = this._subPlaneDim.row * this._subPlaneDim.col;\n    for(var i=0; i<nbSubPlanes; i++){\n      // center of the sub-plane in world coordinates\n      var center = this._subPlanes[i].localToWorld(new THREE.Vector3(0, 0, 0));\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Update the uniform of a specific sub-plane using the texture data. This will automatically update the related fragment shader.\n  * @param {Number} i - index of the subplane to update.\n  * @param {Object} textureData - texture data as created by LevelManager.get8ClosestTextureData()\n  */\n  _updateSubPlaneUniform(i, textureData){\n    //var chunkSizeWC = this._levelManager.getCurrentChunkSizeWc();\n    var chunkSizeWC = this._levelManager.getChunkSizeWcByLvl( this._resolutionLevel );\n\n    var uniforms = this._shaderMaterials[i].uniforms;\n    uniforms.nbChunks.value = textureData.nbValid;\n    uniforms.textures.value = textureData.textures;\n    uniforms.textureOrigins.value = textureData.origins;\n    uniforms.chunkSize.value = chunkSizeWC;\n\n    uniforms.useColorMap.value = this._colormapManager.isColormappingEnabled();\n    uniforms.colorMap.value = this._colormapManager.getCurrentColorMap().colormap;\n\n\n    //uniforms.colorMap.value = THREE.ImageUtils.loadTexture( \"colormaps/rainbow.png\" );\n    //this._shaderMaterials[i].needsUpdate = true;  // apparently useless\n\n  }\n\n\n  /**\n  * @return the main plane, containing all the sub-planes\n  */\n  getPlane(){\n    return this._plane;\n  }\n\n\n  /**\n  * Update the internal resolution level and scale the plane accordingly.\n  * @param {Number} lvl - zoom level, most likely in [0, 6] (integer)\n  */\n  updateScaleFromRezLvl( lvl ){\n\n    // safety measure\n    if(lvl < 0){\n      lvl = 0;\n    }\n\n    this._resolutionLevel = lvl;\n    var scale = 1 / Math.pow( 2, this._resolutionLevel );\n\n    this._plane.scale.x = scale;\n    this._plane.scale.y = scale;\n    this._plane.scale.z = scale;\n\n    // explicitely call to update the matrix, otherwise it would be called at the next render\n    // and in the meantime, we need to have proper position to load the chunks.\n    this._plane.updateMatrixWorld();\n\n    // this one is not supposed to be necessary\n    //this._plane.updateMatrix();\n\n    // now the size is updated, we update the texture\n    this.updateUniforms();\n  }\n\n\n  /**\n  * Compute and return the normal vector of this plane in world coordinates using the local quaternion.\n  * @returns {THREE.Vector3} a normalized vector.\n  */\n  getWorldNormal(){\n    return this._getWorldVectorNormalized( new THREE.Vector3(0, 0, 1) );\n  }\n\n\n  getWorldVectorU(){\n    return this._getWorldVectorNormalized( new THREE.Vector3(1, 0, 0) );\n  }\n\n\n  getWorldVectorV(){\n    return this._getWorldVectorNormalized( new THREE.Vector3(0, 1, 0) );\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Transform a local vector (local to the plane) into a world coodinate vector.\n  * @param {THREE.Vector3} v - a local vector\n  * @returns {THREE.Vector3} a vector in world coodinates\n  */\n  _getWorldVectorNormalized( v ){\n    var ParentQuaternion = new THREE.Quaternion().copy(this._plane.quaternion);\n    var vector = v.clone();\n    vector.applyQuaternion(ParentQuaternion).normalize();\n    return vector;\n  }\n\n\n  /**\n  * @return {Number} the size of this plane diagonal in world coordinates.\n  */\n  getWorldDiagonal(){\n    var diago = Math.sqrt( Math.pow(this._subPlaneDim.row, 2) + Math.pow(this._subPlaneDim.col, 2) ) * this._plane.scale.x;\n\n    return diago;\n  }\n\n\n  /**\n  * Enable a given layer in the visibility mask, so that it's visible by a camera with the same layer activated.\n  */\n  enableLayer( l ){\n    this._subPlanes.forEach(function(sp){\n      sp.layers.enable(l);\n    });\n  }\n\n\n  /**\n  * Disable a given layer in the visibility mask, so that it's not visible by a camera with a different layer activated.\n  */\n  disableLayer( l ){\n    this._subPlanes.forEach(function(sp){\n      sp.layers.disable(l);\n    });\n  }\n\n\n\n\n} /* END class ProjectionPlane */\n\n\nexport { ProjectionPlane };\n","'use strict'\n\nimport { ProjectionPlane } from './ProjectionPlane.js';\n\n/**\n* An instance of PlaneManager creates ans give some access to 2 small collections of ProjectionPlane instances. Each \"collection\" contains 3 ProjectionPlane instances (that are orthogonal to each other in the 3D space) and there is a collection for Hi resolution and a collection for Low resolution.\n*\n*/\nclass PlaneManager{\n\n  /**\n  * @param {ColorMapManager} colorMapManager - a built instance of ColorMapManager\n  * @param {THREE.Object3D} parent - a parent object to place the planes in.\n  */\n  constructor(colorMapManager, parent){\n    this._colormapManager = colorMapManager;\n\n    // object that contains all the planes\n    this._multiplaneContainer = new THREE.Object3D();\n    this._multiplaneContainer.name = \"multiplane container\";\n    parent.add( this._multiplaneContainer )\n\n    this._projectionPlanesHiRez = [];\n    this._projectionPlanesLoRez = [];\n\n    // So far, the Hi rez and Lo rez set of planes are exactelly the same\n    this._addOrthoPlanes(this._projectionPlanesHiRez)\n    this._addOrthoPlanes(this._projectionPlanesLoRez)\n\n    this._onMultiplaneMoveCallback = null;\n    this._onMultiplaneRotateCallback = null;\n  }\n\n\n  /**\n  * Define a callback for when the multiplane container is moved.\n  * @param {function} cb - callback\n  */\n  onMultiplaneMove(cb){\n    this._onMultiplaneMoveCallback = cb;\n  }\n\n\n  /**\n  * Define a callback for when the multiplane container is rotated.\n  * @param {function} cb - callback\n  */\n  onMultiplaneRotate(cb){\n    this._onMultiplaneRotateCallback = cb;\n  }\n\n\n  /**\n  * @return {THREE.Object3D} the multiplane container\n  */\n  getMultiplaneContainer(){\n    return this._multiplaneContainer;\n  }\n\n\n  setMultiplanePosition(x, y, z){\n    this._multiplaneContainer.position.x = x;\n    this._multiplaneContainer.position.y = y;\n    this._multiplaneContainer.position.z = z;\n\n    this.updateUniforms();\n\n    this._onMultiplaneMoveCallback && this._onMultiplaneMoveCallback( this._multiplaneContainer.position );\n  }\n\n\n  getMultiplanePosition(){\n    return this._multiplaneContainer.position;\n  }\n\n\n  setMultiplaneRotation(x, y, z){\n    this._multiplaneContainer.rotation.x = x;\n    this._multiplaneContainer.rotation.y = y;\n    this._multiplaneContainer.rotation.z = z;\n\n    this.updateUniforms();\n\n    this._onMultiplaneRotateCallback && this._onMultiplaneRotateCallback();\n  }\n\n\n  getMultiplaneRotation(){\n    return this._multiplaneContainer.rotation;\n  }\n\n\n  /**\n  * Build 3 orthogonal planes, add them to the array in argument arrayToAdd and add them to the parent.\n  * @param {Array} arrayToAdd - array to push the 3 ProjectionPlane instances that are about to be created.\n  */\n  _addOrthoPlanes( arrayToAdd ){\n    var pn = new ProjectionPlane(1, this._colormapManager);\n    pn.setMeshColor(new THREE.Color(0x000099) );\n    arrayToAdd.push( pn );\n    this._multiplaneContainer.add( pn.getPlane() );\n\n    var pu = new ProjectionPlane(1, this._colormapManager);\n    arrayToAdd.push( pu );\n    pu.getPlane().rotateX( Math.PI / 2);\n    this._multiplaneContainer.add( pu.getPlane() );\n\n    var pv = new ProjectionPlane(1, this._colormapManager);\n    pv.setMeshColor(new THREE.Color(0x990000) );\n    arrayToAdd.push( pv );\n    pv.getPlane().rotateY( Math.PI / 2);\n    pv.getPlane().rotateZ( Math.PI / 2);\n    this._multiplaneContainer.add( pv.getPlane() );\n  }\n\n\n  /**\n  * Enable a layer mask for the low rez planes, so that the planes are visible from a camera with the same enabled layer.\n  * @param {Number} layerIndex - layer to enable, must be in [0, 31]\n  */\n  enableLayerHiRez(layerIndex){\n    this._enableLayerPlaneArray(layerIndex, this._projectionPlanesHiRez);\n  }\n\n\n  /**\n  * Enable a layer mask for the hi rez planes, so that the planes are visible from a camera with the same enabled layer.\n  * @param {Number} layerIndex - layer to enable, must be in [0, 31]\n  */\n  enableLayerLoRez(layerIndex){\n    this._enableLayerPlaneArray(layerIndex, this._projectionPlanesLoRez);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Generic method to enable a layer. Should no be used, use enableLayerHiRez or enableLayerLoRez instead.\n  * @param {Number} layerIndex - index of the layer to enable\n  * @param {Array} arrayOfPlanes - array of ProjectionPlane instances to which we want to enable a layer\n  */\n  _enableLayerPlaneArray(layerIndex, arrayOfPlanes){\n    arrayOfPlanes.forEach(function(plane){\n      plane.enableLayer(layerIndex);\n    })\n  }\n\n\n  /**\n  * Disable a layer mask for the low rez planes, so that the planes are invisible from a camera that does not have the same enabled layer.\n  * @param {Number} layerIndex - layer to enable, must be in [0, 31]\n  */\n  disableLayerHiRez(layerIndex){\n    this._disableLayerPlaneArray(layerIndex, this._projectionPlanesHiRez);\n  }\n\n\n  /**\n  * Disable a layer mask for the hi rez planes, so that the planes are invisible from a camera that does not have the same enabled layer.\n  * @param {Number} layerIndex - layer to enable, must be in [0, 31]\n  */\n  disableLayerLoRez(layerIndex){\n    this._disableLayerPlaneArray(layerIndex, this._projectionPlanesLoRez);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Generic method to disable a layer. Should no be used, use enableLayerHiRez or enableLayerLoRez instead.\n  * @param {Number} layerIndex - index of the layer to enable\n  * @param {Array} arrayOfPlanes - array of ProjectionPlane instances to which we want to enable a layer\n  */\n  _disableLayerPlaneArray(layerIndex, arrayOfPlanes){\n    arrayOfPlanes.forEach(function(plane){\n      plane.disableLayer(layerIndex);\n    })\n  }\n\n\n  /**\n  * Defines a LevelManager instance for all the ProjectionPlane of all sub collection (hi rez + lo rez)\n  * @param {LevelManager} lvlMgr - a built instance of LevelManager.\n  */\n  setLevelManager(lvlMgr){\n    this._setLevelManagerPlaneArray(lvlMgr, this._projectionPlanesHiRez);\n    this._setLevelManagerPlaneArray(lvlMgr, this._projectionPlanesLoRez);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * A rather generic method to set the LevelManager instance to an whole array of ProjectionPlane instances.\n  * Written in case more collection of ProjectionPlanes would be added.\n  * @param {LevelManager} lvlMgr - a built instance of LevelManager.\n  * @param {Array} arrayOfPlanes - array of ProjectionPlane instances to which we want to set the level manager.\n  */\n  _setLevelManagerPlaneArray(lvlMgr, arrayOfPlanes){\n    arrayOfPlanes.forEach(function(plane){\n      plane.setLevelManager(lvlMgr);\n    });\n  }\n\n\n  /**\n  * Update the scale of all instance of all ProjectionPlanes. Still, the lo-rez plane will be updated at (lvl - 2).\n  * @param {Number} lvl - level or resolution, most likely in [0, 6]\n  */\n  updateScaleFromRezLvl(lvl){\n    this._updateScaleFromRezLvlPlaneArray(lvl, this._projectionPlanesHiRez);\n    this._updateScaleFromRezLvlPlaneArray(lvl - 2, this._projectionPlanesLoRez);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Generic function for whatever array of ProjectionPlane instances to update its scale.\n  * @param {Number} lvl - level or resolution, most likely in [0, 6]\n  * @param {Array} arrayOfPlanes - array of ProjectionPlane instances to which we want to update the scale.\n  */\n  _updateScaleFromRezLvlPlaneArray(lvl, arrayOfPlanes){\n    arrayOfPlanes.forEach( function(plane){\n      plane.updateScaleFromRezLvl( lvl );\n    });\n  }\n\n\n  /**\n  * Update the uniform of all the ProjectionPlane instances.\n  */\n  updateUniforms(){\n    this._updateUniformsPlaneArray(this._projectionPlanesHiRez);\n    this._updateUniformsPlaneArray(this._projectionPlanesLoRez);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Generic function to updates all the ProjectionPlane instances' uniforms.\n  * @param {Array} arrayOfPlanes - array of ProjectionPlane instances to which we want to update the uniforms.\n  */\n  _updateUniformsPlaneArray(arrayOfPlanes){\n    arrayOfPlanes.forEach( function(plane){\n      plane.updateUniforms();\n    });\n  }\n\n\n  /**\n  * @return the size of the plane diagonal in world dimensions.\n  */\n  getWorldDiagonalHiRez(){\n    return this._projectionPlanesHiRez[0].getWorldDiagonal();\n  }\n\n\n  /**\n  * @param {Number} planeIndex - index of the plane (Hi-rez) we want the normal vector of.\n  * @returns {THREE.Vector3} the normal vector to the plane with such index.\n  */\n  getWorldVectorN(planeIndex){\n    return this._projectionPlanesHiRez[planeIndex].getWorldNormal();\n  }\n\n\n  /**\n  * @param {Number} planeIndex - index of the plane (Hi-rez) we want the U vector of.\n  * @returns {THREE.Vector3} the U vector to the plane with such index.\n  */\n  getWorldVectorU(planeIndex){\n    return this._projectionPlanesHiRez[planeIndex].getWorldVectorU();\n  }\n\n\n  /**\n  * @param {Number} planeIndex - index of the plane (Hi-rez) we want the V vector of.\n  * @returns {THREE.Vector3} the V vector to the plane with such index.\n  */\n  getWorldVectorV(planeIndex){\n    return this._projectionPlanesHiRez[planeIndex].getWorldVectorV();\n  }\n\n\n\n\n\n  /**\n  * [PRIVATE]\n  * Rotate the main object container on one of its native axis. This axis is relative to inside the object.\n  * @param {Number} planeIndex - Index of the plane (0:Z, 1:Y, 2:X)\n  * @param {Number} rad - angle in radian\n  */\n  _rotateMultiplane(planeIndex, rad){\n    var normalPlane = this.getWorldVectorN(planeIndex);\n    this._multiplaneContainer.rotateOnAxis ( normalPlane, rad );\n\n    this.updateUniforms();\n\n    this._onMultiplaneRotateCallback && this._onMultiplaneRotateCallback();\n  }\n\n\n  /**\n  * Rotate the main object container on its native Z axis. This Z axis is relative to inside the object.\n  * @param {Number} rad - angle in radian\n  */\n  rotateMultiplaneZ( rad ){\n    this._rotateMultiplane(0, rad);\n  }\n\n\n  /**\n  * Rotate the main object container on its native X axis. This X axis is relative to inside the object.\n  * @param {Number} rad - angle in radian\n  */\n  rotateMultiplaneX( rad ){\n    this._rotateMultiplane(2, rad);\n  }\n\n\n  /**\n  * Rotate the main object container on its native Y axis. This Y axis is relative to inside the object.\n  * @param {Number} rad - angle in radian\n  */\n  rotateMultiplaneY( rad ){\n    this._rotateMultiplane(1, rad);\n  }\n\n\n\n  /**\n  * Translate the main object container along the u and v vector relative to the x plane instead of the regular coordinate system X.\n  * @param {Number} uDistance - distance to move along the uVector of the plane X\n  * @param {Number} vDistance - distance to move along the vVector of the plane X\n  */\n  translateMultiplaneX(uDistance, vDistance){\n    this._translateMultiplane(2, uDistance, vDistance);\n  }\n\n\n  /**\n  * Translate the main object container along the u and v vector relative to the y plane instead of the regular coordinate system Y.\n  * @param {Number} uDistance - distance to move along the uVector of the plane Y\n  * @param {Number} vDistance - distance to move along the vVector of the plane Y\n  */\n  translateMultiplaneY(uDistance, vDistance){\n    this._translateMultiplane(1, uDistance, vDistance);\n  }\n\n\n  /**\n  * Translate the main object container along the u and v vector relative to the z plane instead of the regular coordinate system Z.\n  * @param {Number} uDistance - distance to move along the uVector of the plane Z\n  * @param {Number} vDistance - distance to move along the vVector of the plane Z\n  */\n  translateMultiplaneZ(uDistance, vDistance){\n    this._translateMultiplane(0, uDistance, vDistance);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Moves the main object container using a the u and v local unit vector of a specific plane.\n  * The u and v vector are orthogonal to the plane's normal (even in an oblique context).\n  * @param {Number} planeIndex - index of the plane, most likely in [0, 2]\n  * @param {Number} uDistance - distance to move the main object along u vector. signed float.\n  * @param {Number} vDistance - distance to move the main object along v vector. signed float.\n  */\n  _translateMultiplane(planeIndex, uDistance, vDistance){\n    var uVector = this.getWorldVectorU(planeIndex);\n    var vVector = this.getWorldVectorV(planeIndex);\n\n    this._multiplaneContainer.translateOnAxis( uVector, uDistance );\n    this._multiplaneContainer.translateOnAxis( vVector, vDistance );\n\n    this.updateUniforms();\n\n    this._onMultiplaneMoveCallback && this._onMultiplaneMoveCallback( this._multiplaneContainer.position );\n\n  }\n\n} /* END CLASS PlaneManager */\n\n\nexport { PlaneManager }\n","'use strict';\n\nimport { AjaxFileLoader } from './AjaxFileLoader.js';\n\n/**\n* MniObjReader is a parser of mniobj surface files. This version is an atempt of\n* making a free from dependency independant module. It is based on the code witten\n* by Nicolas Kassis and Tarek Sherif for BrainBrowser\n* (https://brainbrowser.cbrain.mcgill.ca).\n*\n* Since mniobj file can be huge, it may be a good idea to call that froma worker.\n*\n* @author: Jonathan Lurie (github.com/jonathanlurie)\n* @author: Nicolas Kassis\n* @author: Tarek Sherif\n*/\n\nclass MniObjReader{\n\n  /**\n  * Constructor of the MniObjReader.\n  */\n  constructor(){\n    this._stack = null;\n    this._stackIndex = null;\n    this._tempResult = null;\n    this._shapeData = null;\n  }\n\n\n  /**\n  * Copy an existing MniObjReader instance.\n  * This is particularly usefull in the context of a worker, if an MniObjReader\n  * is returned, it is using a JSON format to transfer, meaning all the methods\n  * are lost and only remains the data. This is to rebuild a proper MniObjReader.\n  * @param {MniObjReader} MniObjReaderInstance - the instance to copy the data from.\n  */\n  copy(MniObjReaderInstance){\n    this._stack = MniObjReaderInstance._stack;\n    this._stackIndex = MniObjReaderInstance._stackIndex\n    this._tempResult = MniObjReaderInstance._tempResult\n    this._shapeData = MniObjReaderInstance._shapeData;\n  }\n\n\n  /**\n  * Parse the nmiobj string.\n  * @param {String} objString - This string is obviously taken out of a obj file\n  */\n  parse(objString) {\n    this._parseRawData( objString );\n    this._arrangeData();\n  }\n\n\n  /**\n  * Parse a obj string\n  * @param {String} objString - content of the obj file\n  */\n  _parseRawData( objString ){\n    this._stack = objString.trim().split(/\\s+/).reverse();\n    this._stackIndex = this._stack.length - 1;\n    this._tempResult = {};\n\n    var splitHemispheres = false;  //TODO remove that and the code that depends on that\n    var objectClass = this._popStack();\n    var start, end, nitems;\n    var indices, endIndices;\n    var lineIndices = null;\n    var lineIndexSize, lineIndexCounter;\n\n    // By default models are not split\n    // (this option allows us to split hemispheres\n    // into two separate models.)\n    this._tempResult.split = false;\n\n    this._tempResult.type = objectClass === \"P\" ? \"polygon\" :\n                  objectClass === \"L\" ? \"line\" :\n                  objectClass;\n\n    if(this._tempResult.type === \"polygon\") {\n      this._parseSurfProp();\n      this._tempResult.numVertices = parseInt(this._popStack(), 10);\n      this._parseVertices();\n      this._parseNormals();\n      this._tempResult.nitems = parseInt(this._popStack(), 10);\n    } else if (this._tempResult.type === \"line\") {\n      this._parseSurfProp();\n      this._tempResult.numVertices = parseInt(this._popStack(), 10);\n      this._parseVertices();\n      this._tempResult.nitems = parseInt(this._popStack(), 10);\n    } else {\n      this._tempResult.error = true;\n      this._tempResult.errorMessage = 'Invalid MNI Object class: must be \"polygon\" or \"line\"';\n      return;\n    }\n\n    this._parseColors();\n    this._parseEndIndices();\n    this._parseIndices();\n\n    if (this._tempResult.type === \"polygon\" ) {\n      if (splitHemispheres){\n        this._tempResult.split = true;\n        this._splitHemispheres();\n      }\n    } else if (this._tempResult.type === \"line\") {\n      indices = this._tempResult.indices;\n      endIndices = this._tempResult.endIndices;\n      nitems = this._tempResult.nitems;\n      lineIndexSize = lineIndexCounter = 0;\n\n      for (var i = 0; i < nitems; i++){\n        if (i === 0){\n          start = 0;\n        } else {\n          start = endIndices[i - 1];\n        }\n\n        end = endIndices[i];\n        lineIndexSize += (end - start - 1) * 2;\n      }\n\n      lineIndices = new Uint32Array(lineIndexSize);\n\n      for (var i = 0; i < nitems; i++){\n        if (i === 0){\n          start = 0;\n        } else {\n          start = endIndices[i - 1];\n        }\n\n        lineIndices[lineIndexCounter++] = indices[start];\n        end = endIndices[i];\n\n        for (var j = start + 1; j < end - 1; j++) {\n          lineIndices[lineIndexCounter++] = indices[j];\n          lineIndices[lineIndexCounter++] = indices[j];\n        }\n\n        lineIndices[lineIndexCounter++] = indices[end - 1];\n      }\n\n      this._tempResult.indices = lineIndices;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Rearange the data from _tempResult to _shapeData\n  */\n  _arrangeData() {\n\n      this._shapeData = {\n        type: this._tempResult.type,\n        vertices: this._tempResult.vertices,\n        normals: this._tempResult.normals,\n        colors: this._tempResult.colors,\n        surfaceProperties: this._tempResult.surfaceProperties,\n        split: this._tempResult.split,\n        error: this._tempResult.error,\n        errorMessage: this._tempResult.errorMessage\n      };\n\n      var transfer = [\n        this._shapeData.vertices.buffer,\n        this._shapeData.colors.buffer\n      ];\n\n      if (this._shapeData.normals) {\n        transfer.push(this._shapeData.normals.buffer);\n      }\n\n      if (this._shapeData.split) {\n        this._shapeData.shapes = [\n          { indices: this._tempResult.left.indices },\n          { indices: this._tempResult.right.indices }\n        ];\n\n        transfer.push(\n          this._tempResult.left.indices.buffer,\n          this._tempResult.right.indices.buffer\n        );\n      } else {\n        this._shapeData.shapes = [\n          { indices: this._tempResult.indices }\n        ];\n        transfer.push(\n          this._tempResult.indices.buffer\n        );\n      }\n\n      // unroll colors if necessary\n      if(this._shapeData.colors.length === 4) {\n        this._unrollColors();\n      }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * From a single color, make a typed array (Uint8) of colors.\n  */\n  _unrollColors(){\n    var dataColor0, dataColor1, dataColor2, dataColor3;\n    var count;\n    var nbTriangles = this._shapeData.vertices.length / 3;\n    var arraySize = nbTriangles * 4;\n    var unrolledColors = new Uint8Array(arraySize);\n\n    dataColor0 = this._shapeData.colors[0];\n    dataColor1 = this._shapeData.colors[1];\n    dataColor2 = this._shapeData.colors[2];\n    dataColor3 = this._shapeData.colors[3];\n\n    for(var i=0; i<arraySize; i+=4){\n      unrolledColors[i]     = dataColor0 * 255;\n      unrolledColors[i + 1] = dataColor1 * 255;\n      unrolledColors[i + 2] = dataColor2 * 255;\n      unrolledColors[i + 3] = dataColor3 * 255;\n    }\n\n    this._shapeData.colors = unrolledColors;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Parse surface properties from the raw data.\n  */\n  _parseSurfProp() {\n    if (this._tempResult.type === \"polygon\") {\n      this._tempResult.surfaceProperties = {\n        ambient: parseFloat(this._popStack()),\n        diffuse: parseFloat(this._popStack()),\n        specularReflectance: parseFloat(this._popStack()),\n        specularScattering: parseFloat(this._popStack()),\n        transparency: parseFloat(this._popStack())\n      };\n\n    }else if (this._tempResult.type === \"line\") {\n      this._tempResult.surfaceProperties = {\n        width: this._popStack()\n      };\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Parse the vertices from the raw data.\n  */\n  _parseVertices() {\n    var count = this._tempResult.numVertices * 3;\n    var vertices = new Float32Array(count);\n    var that = this;\n\n    for (var i = 0; i < count; i++) {\n      vertices[i] = parseFloat(this._popStack());\n    }\n\n    this._tempResult.vertices = vertices;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Parse the normal vector from the raw data.\n  */\n  _parseNormals() {\n    var count = this._tempResult.numVertices * 3;\n    var normals = new Float32Array(count);\n\n    for (var i = 0; i < count; i++) {\n      normals[i] = parseFloat(this._popStack());\n    }\n\n    this._tempResult.normals = normals;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Parse the color from the raw data.\n  */\n  _parseColors() {\n    var colorFlag = parseInt(this._popStack(), 10);\n    var colors;\n    var count;\n\n    if (colorFlag === 0) {\n      colors = new Float32Array(4);\n      for (var i = 0; i < 4; i++){\n        colors[i] = parseFloat(this._popStack());\n      }\n    } else if (colorFlag === 1) {\n      count = this._tempResult.num_polygons * 4;\n      colors = new Float32Array(count);\n      for (var i = 0; i < count; i++){\n        colors[i] = parseFloat(this._popStack());\n      }\n    } else if (colorFlag === 2) {\n      count = this._tempResult.numVertices * 4;\n      colors = new Float32Array(count);\n      for (var i = 0; i < count; i++){\n        colors[i] = parseFloat(this._popStack());\n      }\n    } else {\n      this._tempResult.error = true;\n      this._tempResult.errorMessage = \"Invalid color flag: \" + colorFlag;\n    }\n\n    this._tempResult.colorFlag = colorFlag;\n    this._tempResult.colors = colors;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Not sure how useful endIndices are, it was used in BrainBrowser so I kept them.\n  * (is that useful?)\n  */\n  _parseEndIndices(){\n    var count = this._tempResult.nitems;\n    var endIndices = new Uint32Array(count);\n\n    for(var i = 0; i < count; i++){\n      endIndices[i] = parseInt(this._popStack(), 10);\n    }\n\n    this._tempResult.endIndices = endIndices;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Reads the vertices indices to use to make triangles.\n  */\n  _parseIndices() {\n    var count = this._stackIndex + 1;\n    var indices = new Uint32Array(count);\n\n    for (var i = 0; i < count; i++) {\n      indices[i] = parseInt(this._popStack(), 10);\n    }\n\n    this._tempResult.indices = indices;\n  }\n\n\n  /**\n  * [NOT USED]\n  * This is legacy code I left from the reader in BrainBrowser. Since splitHemispheres is\n  * hardcoded to false, this is not called.\n  */\n  _splitHemispheres() {\n    var numIndices = this._tempResult.indices.length;\n\n    this._tempResult.left = {\n      indices: new Uint32Array(Array.prototype.slice.call(this._tempResult.indices, 0, numIndices / 2))\n    };\n\n    this._tempResult.right = {\n      indices: new Uint32Array(Array.prototype.slice.call(this._tempResult.indices, numIndices / 2))\n    };\n  }\n\n\n  /**\n  * [PRIVATE]\n  * pop the raw data (big string file)\n  * @return {String}\n  */\n  _popStack() {\n    return this._stack[this._stackIndex--];\n  }\n\n\n  /**\n  * [DEBUGGING]\n  * @return {Object} the entire shapeData object.\n  */\n  getShapeData () {\n    return this._shapeData;\n  }\n\n\n  /**\n  * @return the number of shapes encoded in the file\n  */\n  getNumberOfShapes() {\n    return this._shapeData.shapes.length;\n  }\n\n\n  /**\n  * Returns the index of vertices to be used to make triangles, as a typed array.\n  * @return {Uint32Array} Since triangles have 3 vertices, the array contains index such as\n  * [i0, i1, i2, i0, i1, i2, ...].\n  */\n  getShapeRawIndices(shapeNum) {\n    if(shapeNum >= 0 && shapeNum<this._shapeData.shapes.length){\n      return this._shapeData.shapes[shapeNum].indices;\n    }else{\n      return null;\n    }\n  }\n\n\n  /**\n  * Returns the vertice position as a typed array.\n  * @return {Float32Array} of points encoded like [x, y, z, x, y, z, ...]\n  */\n  getRawVertices() {\n    return this._shapeData.vertices;\n  }\n\n\n  /**\n  * Returns the normal vectors as a typed array.\n  * @return {Float32Array} of normal vector encoded like [x, y, z, x, y, z, ...]\n  */\n  getRawNormals() {\n    return this._shapeData.normals;\n  }\n\n\n  /**\n  * Get the colors encoded like [r, g, b, a, r, g, b, a, ...]\n  * @return {Float32Array} of size 4 or of size 4xnumOfVertices\n  */\n  getRawColors(){\n    return this._shapeData.colors;\n  }\n\n\n  /**\n  * The surface properties contains transparency info about specularity transparency\n  * and other nice light-related behaviour thingies.\n  * May be used when building a material, but this is not mandatory.\n  * @return {Object}\n  */\n  getSurfaceProperties(){\n    return this._shapeData.surfaceProperties;\n  }\n\n\n}/* END CLASS MniObjReader */\n\nexport { MniObjReader };\n","'use strict';\n\nimport { AjaxFileLoader } from './AjaxFileLoader.js';\nimport { MniObjReader } from './MniObjReader.js';\n\nclass MeshCollection{\n\n  /**\n  * Constructor of the MeshCollection instance.\n  *\n  */\n  constructor( config, container ){\n\n    // THREE js container (object3D) for all the meshes\n    this._container = container;\n\n\n    // rather than an array because all mesh have an ID\n    this._meshes = {};\n\n    // the folder that contains the json config file (that is at config.url).\n    // depending on the option of the file, the mesh files can have a\n    // relative address to this folder, making the folder portable.\n    this._configFileDir = null;\n\n    this._collectionBox = null;\n\n    this._readConfig( config );\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Start to read the configuration, containing an extensive list of mesh\n  * with their description.\n  * @param {Object} config - a small config object {datatype: String, url: String}\n  */\n  _readConfig( config ){\n    var that = this;\n    var filepath = config.url;\n\n    AjaxFileLoader.loadTextFile(\n      // file URL\n      filepath,\n\n      // success callback\n      function(data){\n        // the directory of the config file is the working directory\n        that._configFileDir = filepath.substring(0, Math.max(filepath.lastIndexOf(\"/\"), filepath.lastIndexOf(\"\\\\\"))) + \"/\";\n\n        // Rading the config object\n        that._loadConfigDescription(JSON.parse(data));\n      },\n\n      // error callback\n      function(error){\n        console.error(\"Could not load config file \" + filepath);\n\n        // if loading the config file failed, we have a callback for that.\n        if(that._onConfigErrorCallback){\n          that._onConfigErrorCallback(filepath, 0);\n        }\n      }\n    )\n  }\n\n\n  /**\n  * [PRIVATE]\n  *\n  */\n  _loadConfigDescription( meshConfig ){\n    var that = this;\n\n    meshConfig.forEach( function(meshInfo){\n      var url = meshInfo.url;\n\n      // \"near\" means files are in a folder relative to the config file.\n      // This can be local or distant.\n      if( meshInfo.urlType == \"near\" ){\n        url = that._configFileDir + url;\n\n      // \"local\" means the specified url is relative to the web app\n      }else if(meshInfo.urlType == \"local\"){\n        // nothing to do\n\n      // \"absolute\" means the path should start by http\n      }else if(meshInfo.urlType == \"absolute\"){\n        // nothing to do\n      }\n\n      AjaxFileLoader.loadTextFile(\n        // file URL\n        url,\n\n        // success callback\n        function(data){\n          var objReader = new MniObjReader();\n          objReader.parse( data );\n          var mesh = that._buildMeshFromObjReader( objReader );\n          mesh.geometry.computeBoundingBox();\n          mesh.name = meshInfo.id;\n          mesh.userData.longName = meshInfo.name;\n          mesh.userData.description = meshInfo.description;\n\n          // parametric rotation\n          if(\"eulerAngle\" in meshInfo){\n            mesh.rotation.set(meshInfo.eulerAngle[0], meshInfo.eulerAngle[1], meshInfo.eulerAngle[2])\n          }\n\n          // parametric scale\n          if(\"scale\" in meshInfo){\n            mesh.scale.set(meshInfo.scale[0], meshInfo.scale[1], meshInfo.scale[2])\n          }\n\n          // parametric position\n          if(\"position\" in meshInfo){\n            mesh.position.set(meshInfo.position[0], meshInfo.position[1], meshInfo.position[2])\n          }\n\n          // shows on all cam\n          mesh.layers.enable( 0 );\n          mesh.layers.enable( 1 );\n\n          // show only on perspective cam\n          //mesh.layers.disable( 0 );\n          //mesh.layers.enable( 1 );\n\n          that._meshes[meshInfo.id] = mesh;\n          that._container.add( mesh );\n\n          that._updateCollectionBox( mesh );\n        },\n\n        // error callback\n        function(error){\n          console.error(\"Could not load mesh file \" + url);\n\n        }\n      )\n\n    });\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Creates a three mesh out of a mniObjReader instance\n  * @param {MniObjReader} mniObjReader - must have called parse() on it first\n  * @return {THREE.Mesh} - a mesh based on the mni obj parsed data\n  */\n  _buildMeshFromObjReader( mniObjReader ){\n    var geometry = new THREE.BufferGeometry();\n    var indices = mniObjReader.getShapeRawIndices(0);\n    var positions = mniObjReader.getRawVertices();\n    var normals = mniObjReader.getRawNormals();\n    var colors = mniObjReader.getRawColors();\n    geometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n    geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n    geometry.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3, true ) );\n    geometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 4, true ) );\n    geometry.computeBoundingSphere();\n\n    var material = new THREE.MeshPhongMaterial( {\n      specular: 0xffffff,\n      shininess: 250,\n      side: THREE.DoubleSide,\n      vertexColors: THREE.VertexColors,\n      transparent: true,\n      opacity: mniObjReader.getSurfaceProperties().transparency,\n    } );\n\n    var mesh = new THREE.Mesh( geometry, material );\n    return mesh;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Expands the collection bounding box with a new mesh.\n  * @param {THREE.Mesh} mesh - a mesh to expand the collection bounding box\n  */\n  _updateCollectionBox( mesh ){\n\n    // first mesh we load, we take its bb\n    if(!this._collectionBox){\n      this._collectionBox = mesh.geometry.boundingBox.clone();\n\n    // additionnal mes: we expand the collection bb\n    }else{\n      this._collectionBox.union( mesh.geometry.boundingBox );\n    }\n  }\n\n\n} /* END class MeshCollection */\n\n\nexport { MeshCollection };\n","'use strict'\n\nclass GuiController{\n\n  constructor( quadScene ){\n\n    this._quadScene = quadScene;\n\n\n    //this._datGui = new dat.GUI();\n\n    // fake value for dat gui - just to display the init value\n    this._resolutionLevel = this._quadScene.getResolutionLevel();\n    this._resolutionLvlRange = [0, 6];\n    this._resolutionLvlSliderBuilt = false;\n    this._resolutionDescription = '';\n\n    // special controller for colormaps\n    this._colormapManager = this._quadScene.getColormapManager();\n    this._colormapManager.onColormapUpdate( this._updateColormapList.bind(this) );\n\n    // Annotations\n    this._annotationCollection = this._quadScene.getAnnotationCollection();\n\n    var panelWidth = 200;\n    var panelSpace = 5;\n\n    this._mainPanel = QuickSettings.create(panelSpace, 0, document.title);\n\n    this._annotationPanel = QuickSettings.create(panelWidth + panelSpace*2 , 0, \"Annotations\");\n\n    this._initMainPanel();\n    this._initAnnotationPanel();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Adds buttons to the widget\n  */\n  _initMainPanel(){\n    var that = this;\n\n    // compass toggle\n    this._mainPanel.addBoolean(\"Compass\", 1, function(mustShow){\n      that._quadScene.getOrientationHelper().setVisibility( mustShow );\n    });\n\n    // bounding box toggle\n    this._mainPanel.addBoolean(\"Bounding box\", 1, function(mustShow){\n      that._quadScene.getBoundingBoxHelper().setVisibility( mustShow );\n    });\n    document.getElementById(\"Bounding box\").parentElement.parentElement.style[\"margin-top\"] = \"0px\";\n\n    // rez lvl slider\n    this._mainPanel.addRange(\"Zoom level\", 0, 6, 0, 1,\n      // on change\n      function( value ){\n        value = Math.floor( value );\n        that._updateResolutionDescription(\n          value,\n          that._quadScene.getLevelManager().getLevelInfo(that._resolutionLevel, \"key\") + \" ➤ \"\n        );\n      },\n      // on finish\n      function( value ){\n        value = Math.floor( value );\n        that._resolutionLevel = value;\n        that._quadScene.setResolutionLevel( value );\n      }\n    );\n\n    // resolution info\n    this._mainPanel.addText(\"Resolution\", \"\");\n    this._mainPanel.overrideStyle(\"Resolution\", \"background-color\", \"transparent\");\n    document.getElementById('Resolution').readOnly = true;\n    document.getElementById(\"Resolution\").parentElement.style[\"margin-top\"] = \"0px\";\n\n    // multiplane position\n    this._mainPanel.addText(\"Position\", \"\", function(){} );\n    this._mainPanel.overrideStyle(\"Position\", \"text-align\", \"center\");\n\n    // multiplane rotation\n    this._mainPanel.addText(\"Rotation\", \"\", function(){} );\n    this._mainPanel.overrideStyle(\"Rotation\", \"margin-top\", \"0px\");\n    this._mainPanel.overrideStyle(\"Rotation\", \"text-align\", \"center\");\n    document.getElementById(\"Rotation\").parentElement.style[\"margin-top\"] = \"0px\";\n\n    // apply button for multiplane position and rotation\n    this._mainPanel.addButton(\"Apply\", function(){\n      var newPosition = that._mainPanel.getValue(\"Position\")\n        .split(',')\n        .map(function(elem){return parseFloat(elem)});\n\n      var newRotation = that._mainPanel.getValue(\"Rotation\")\n        .split(',')\n        .map(function(elem){return parseFloat(elem)});\n\n      that._quadScene.setMultiplaneRotation(newRotation[0], newRotation[1], newRotation[2]);\n      that._quadScene.setMultiplanePosition(newPosition[0], newPosition[1], newPosition[2]);\n\n\n    });\n\n    this._mainPanel.overrideStyle(\"Apply\", \"width\", \"100%\");\n    document.getElementById(\"Apply\").parentElement.style[\"margin-top\"] = \"0px\";\n\n    // Button reset rotation\n    this._mainPanel.addButton(\"Reset rotation\", function(){\n      that._quadScene.setMultiplaneRotation(0, 0, 0);\n    });\n    this._mainPanel.overrideStyle(\"Reset rotation\", \"width\", \"100%\");\n    document.getElementById(\"Reset rotation\").parentElement.style[\"margin-top\"] = \"0px\";\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Action to toggle the rotation helper\n  */\n  _toggleOrientationHelper(){\n    this._quadScene.getOrientationHelper().toggle();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Action to toggle the bounding box helper\n  */\n  _toggleBoundingBoxHelper(){\n    this._quadScene.getBoundingBoxHelper().toggle();\n  }\n\n\n  /**\n  * Update the UI with a new resolution level.\n  * This does not do anything but refreshing the display\n  * (iow. calling this method does NOT change the rez lvl)\n  */\n  updateResolutionLevelUI( lvl ){\n    this._resolutionLevel = lvl;\n    this._mainPanel.setValue(\"Zoom level\", lvl);\n    this._updateResolutionDescription( this._resolutionLevel );\n  }\n\n\n  /**\n  * Update the UI from rotation, position and rez lvl (later is not used here)\n  * @param {Object} spaceConfig - { resolutionLvl: Number, position:[x, y, z], rotation:[x, y, z]}\n  */\n  updateMultiplaneUI( spaceConfig ){\n    var positionString = spaceConfig.position.x.toFixed(4) + ' , ';\n    positionString += spaceConfig.position.y.toFixed(4) + ' , ';\n    positionString += spaceConfig.position.z.toFixed(4)\n    this._mainPanel.setValue(\"Position\", positionString);\n\n    var rotationString = spaceConfig.rotation.x.toFixed(4) + ' , ';\n    rotationString += spaceConfig.rotation.y.toFixed(4) + ' , ';\n    rotationString += spaceConfig.rotation.z.toFixed(4)\n    this._mainPanel.setValue(\"Rotation\", rotationString);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * update the description of resolution level\n  */\n  _updateResolutionDescription( lvl, prefix=\"\" ){\n    this._resolutionDescription = prefix + this._quadScene.getLevelManager().getLevelInfo(lvl, \"key\");\n    this._mainPanel.setValue(\"Resolution\", this._resolutionDescription);\n\n  }\n\n\n  /**\n  * [PRIVATE] callback\n  * Update the colormap list box and the dedicated callback for when the colormap\n  * changes.\n  */\n  _updateColormapList(){\n    var that = this;\n\n    // color map\n    this._mainPanel.addDropDown(\"Colormap\", this._colormapManager.getAvailableColormaps(),\n      function( dropdownObj ){\n        that._colormapManager.useColormap(dropdownObj.value);\n      }\n    );\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Create the pannel dedicated to annotaion management\n  */\n  _initAnnotationPanel(){\n    var that = this;\n\n\n\n    // open file button\n    this._annotationPanel.addFileChooser(\n      \"Annotation file\",\n      \"Open\",\n      \"\",\n      function( file ){\n        that._annotationCollection.loadAnnotationFileDialog( file );\n      });\n\n    // dropdown menu\n    this._annotationPanel.addDropDown(\"Annotations\", [],\n      function( dropdownObj ){\n        console.log( dropdownObj.value );\n      }\n    );\n\n    // callback when a new annot is added in the core, a new item shows on the menu\n    that._annotationCollection.onAddingAnnotation( function(name){\n      that._annotationPanel.getControl(\"Annotations\").addItem(name);\n      console.log( name );\n    })\n\n    /*\n    this._annotationPanel.getControl(\"Annotations\").removeItem(\"pouet2\");\n    */\n\n\n  }\n\n\n}/* END class GuiController */\n\nexport { GuiController };\n","\n/**\n* A BoundingBoxHelper instance shows the limits of the dataset in a visual way.\n* A bounding box can be built only once.\n*/\nclass BoundingBoxHelper{\n\n  /**\n  * Constructor\n  * @param {THREE.Object3D} parent - THREE js object to add the boinding box\n  */\n  constructor( parent ){\n    this._size = null;\n    this._parentElem = parent;\n    this._boundingBox3D = null;\n  }\n\n\n  /**\n  * Build the bounding box helper.\n  * Can be called only once.\n  * @param {Array} size - Array of Number [xsize, ysize, zsize]\n  */\n  build( size ){\n    this._size = size.slice();\n\n    if(this._boundingBox3D)\n      return;\n\n    this._boundingBox3D = new THREE.Object3D();\n\n    var boundingBoxMaterial = new THREE.MeshBasicMaterial( {\n      transparent: true,\n      opacity: 0.8,\n      color: 0xffffff,\n      vertexColors: THREE.FaceColors,\n      side: THREE.BackSide\n    } );\n\n    var boundingBoxGeometry = new THREE.BoxGeometry(\n      this._size[0],\n      this._size[1],\n      this._size[2]\n    );\n\n    boundingBoxGeometry.faces[0].color.setHex(  0xFF7A7A ); // Sagittal\n    boundingBoxGeometry.faces[1].color.setHex(  0xFF7A7A );\n    boundingBoxGeometry.faces[2].color.setHex(  0xff3333 );\n    boundingBoxGeometry.faces[3].color.setHex(  0xff3333 );\n    boundingBoxGeometry.faces[4].color.setHex(  0x61FA94 ); // Coronal\n    boundingBoxGeometry.faces[5].color.setHex(  0x61FA94 );\n    boundingBoxGeometry.faces[6].color.setHex(  0xA7FAC3 );\n    boundingBoxGeometry.faces[7].color.setHex(  0xA7FAC3 );\n    boundingBoxGeometry.faces[8].color.setHex(  0x95CCFC ); // Axial\n    boundingBoxGeometry.faces[9].color.setHex(  0x95CCFC );\n    boundingBoxGeometry.faces[10].color.setHex( 0x0088ff );\n    boundingBoxGeometry.faces[11].color.setHex( 0x0088ff );\n\n    // mesh\n    var boundingBoxPlainMesh = new THREE.Mesh( boundingBoxGeometry, boundingBoxMaterial );\n    this._boundingBox3D.add( boundingBoxPlainMesh );\n    this._boundingBox3D.position.x = this._size[0] / 2;\n    this._boundingBox3D.position.y = this._size[1] / 2;\n    this._boundingBox3D.position.z = this._size[2] / 2;\n\n    this._boundingBox3D.children.forEach( function(child){\n      child.layers.disable( 0 );\n      child.layers.enable( 1 );\n    });\n\n    this._parentElem.add( this._boundingBox3D );\n  }\n\n\n  /**\n  * @return {boolean} true if xyz is within the bounding box. Return false if outside.\n  * @param {Number} x - coordinate along x\n  * @param {Number} y - coordinate along y\n  * @param {Number} z - coordinate along z\n  */\n  isInside(x, y, z){\n    return (x>0 && x<this._size[0] && y>0 && y<this._size[1] && z>0 && z<this._size[2]);\n  }\n\n\n  /**\n  * Show the bounding box\n  */\n  show(){\n    this._boundingBox3D.visible = true;\n  }\n\n\n  /**\n  * Hide the bounding box\n  */\n  hide(){\n    this._boundingBox3D.visible = false;\n  }\n\n\n  /**\n  * Show the bounding box if it's hidden, hide if it's shown.\n  */\n  toggle(){\n    this._boundingBox3D.visible = !this._boundingBox3D.visible;\n  }\n\n\n  /**\n  * Show or hide\n  * @param {Boolean} b - true to show, false to hide.\n  */\n  setVisibility( b ){\n    this._boundingBox3D.visible = b;\n  }\n\n}/* END class BoundingBoxHelper */\n\nexport { BoundingBoxHelper };\n","'use strict'\n\n/**\n* An Annotation can be a single point, a segment, a linestring or a polygon.\n* Each coordinate is in 3D [x, y, z] and can be represented in a 3D space after\n* being converted into a proper THREEjs object.\n*/\nclass Annotation{\n\n  /**\n  * Constructor of an annotation.\n  * @param {Array of Array} points - Array of [x, y, z], if only one, its a point otherwise it can be a linestring (default) or polygon (options.closed must be true)\n  * @param {String} name - name, suposedly unique\n  * @param {Object} options - all kind of options: isClosed {Boolean}, description {String}, color {String} hexa like \"#FF0000\", eulerAngle {Array} rotation correction [x, y, z], scale {Array} scale correction [x, y, z], position {Array} offset [x, y, z]\n  */\n  constructor(points, name, options={}){\n\n    this._points = points;\n    this._name = name;\n    this._isClosed = (typeof options.isClosed === 'undefined')? false : options.isClosed;\n    this._description = (typeof options.description === 'undefined')? \"\" : options.description;\n    this._color = (typeof options.color === 'undefined')? \"#FF00FF\" : options.color;\n    if( this._color[0] != \"#\"){ this._color = \"#\" + this._color; }\n    this._eulerAngle = (typeof options.eulerAngle === 'undefined')? [0, 0, 0] : options.eulerAngle;\n    this._scale = (typeof options.scale === 'undefined')? [1, 1, 1] : options.scale;\n    this._position = (typeof options.position === 'undefined')? [0, 0, 0] : options.position;\n\n    this._isValid = false;\n    this.validateAnnotation();\n\n    this._pointRadius = 0.1;\n\n    // visual object\n    this._object3D = new THREE.Object3D();\n    this._object3D.name = this._name;\n    this._object3D.userData.description = this._description;\n    this._object3D.userData.isClosed = this._isClosed;\n    this._object3D.scale.set(this._scale[0], this._scale[1], this._scale[2]);\n    this._object3D.position.set(this._position[0], this._position[1], this._position[2]);\n    this._object3D.rotation.set(this._eulerAngle[0], this._eulerAngle[1], this._eulerAngle[2]);\n\n    this._meshMustRebuild = true;\n\n    this._buildAnnotationObject3D();\n  }\n\n\n  /**\n  * Defines the size of the sphere for a point annotation.\n  * @param {Number} r - radius\n  */\n  setPointRadius( r ){\n    this._pointRadius = r;\n  }\n\n\n  /**\n  * Routine to validate an annotation. An annotation is valid if it contains at least one point and if this point contains 3 value (for x, y, z)\n  */\n  validateAnnotation(){\n    this._isValid = true;\n\n    // at least one point\n    if(this._points.length){\n      // every point as a 3D coord\n      this._isValid = ! this._points.some( function( point ){\n        return (point.length != 3);\n      });\n    }\n    // no point, no annotation :(\n    else{\n      this._isValid = false;\n    }\n  }\n\n\n  /**\n  * Add a point at the end of the annotation\n  * @param {Array} point - coord [x, y, z]\n  */\n  addPoint( point ){\n    // maintain integrity (and prevent from running validateAnnotation() )\n    if( point.length == 3){\n      this._points.push( point );\n\n      // TODO if a point tunrs into a line\n\n      this._meshMustRebuild = true;\n    }\n  }\n\n\n  /**\n  * Remove a point from the annotation point set.\n  * @param {Number} index - optionnal, if set remove the point at this index. If not set, remove the last\n  */\n  removePoint( index=-1 ){\n    if( this._isValid ){\n      this._points.splice(index, 1);\n      this.validateAnnotation();\n\n      // TODO if a line turns into a point !\n      // TODO if closed, do we still leave it close?\n\n      this._meshMustRebuild = true;\n    }\n\n\n  }\n\n\n  /**\n  * Get the THREE Object that represent the annotation. Build it if not already built.\n  * @return {THREE.Object3D}\n  */\n  getObject3D(){\n    /*\n    if(this._meshMustRebuild){\n      if(this._points.length == 1){\n        this._buildPointAnnotation();\n      }else{\n        this._buildLinestringAnnotation();\n      }\n\n      return this._object3D;\n    }\n    */\n\n    return this._object3D;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Build a THREE js object that hollows this annotation if it's a point\n  */\n  _buildPointAnnotation(){\n    if( this._isValid ){\n      var geometry = new THREE.BufferGeometry();\n\t\t\tvar position = new Float32Array( this._points[0] );\n\n      var material = new THREE.PointsMaterial({\n        size: 10,\n        color: new THREE.Color(this._color),\n        sizeAttenuation: false\n      });\n\n      geometry.addAttribute( 'position', new THREE.BufferAttribute( position, 3 ) );\n      geometry.computeBoundingSphere();\n      geometry.dynamic = true;\n      geometry.verticesNeedUpdate = true;\n\n      var point = new THREE.Points( geometry, material );\n\n      point.layers.enable( 0 );\n      point.layers.enable( 1 );\n\n      this._object3D.add( point );\n      this._meshMustRebuild = false;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Build a THREE js object that hollows this annotation if it's a linestring or a polygon\n  */\n  _buildLinestringAnnotation(){\n    if( this._isValid ){\n      var geometry = new THREE.Geometry();\n      var material = new THREE.LineBasicMaterial( {\n        linewidth: 1, // thickness remains the same on screen no matter the proximity\n        color: new THREE.Color(this._color)\n      });\n\n      // adding every point\n      this._points.forEach(function(point){\n        geometry.vertices.push( new THREE.Vector3(point[0], point[1], point[2]));\n      })\n\n      // add a the first point again, in the end, to close the loop\n      if(this._isClosed && this._points.length > 2){\n        geometry.vertices.push( new THREE.Vector3(\n            this._points[0][0],\n            this._points[0][1],\n            this._points[0][2]\n          )\n        );\n      }\n\n      geometry.computeLineDistances();\n      var mesh = new THREE.Line( geometry, material );\n      mesh.layers.enable( 0 );\n      mesh.layers.enable( 1 );\n\n      mesh.geometry.dynamic = true;\n      mesh.geometry.verticesNeedUpdate = true;\n\n      this._object3D.add( mesh );\n\n      this._meshMustRebuild = false;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Builds the annotation, no matter if point or line.\n  */\n  _buildAnnotationObject3D(){\n    // this annotation is corrupted\n    if( ! this._isValid ){\n      console.warn(\"This annotation is not valid. Possible reasons: no points OR points number of dimension is not consistant.\");\n      return;\n    }\n\n    if(! this._object3D.children.length ){\n\n      // this is a point\n      if(this._points.length == 1 ){\n        this._buildPointAnnotation();\n      }\n      // this is a linestring or a polygon\n      else{\n        this._buildLinestringAnnotation();\n      }\n\n    }else{\n      console.warn(\"The object3D/mesh for this annotation is already built. Maybe use a modifying method instead.\");\n      return;\n    }\n  }\n\n\n  /**\n  * When we want to close a linstring. Basically adds a point at the end and switch the isClosed boolean.\n  */\n  closeLinestring(){\n    // TODO\n  }\n\n/*\nTODO\nmake sure if you use scene.remove(mesh), you also call mesh.geometry.dispose(), mesh.material.dispose() and mesh.texture.dispose() else you'll get memory leaks I think (r71)\n*/\n\n} /* END of class Annotation */\n\nexport { Annotation };\n","'use strict'\n\nimport { Annotation } from './Annotation.js';\nimport { AjaxFileLoader } from './AjaxFileLoader.js';\n\n\n/**\n* An annotation collection contains uniquely named Annotation instances as well\n* as a container for their 3D representations.\n* When adding a new annotation, its name must not be already in the collection.\n* Still, when a name is not specified, a timestamp-based name is automatically\n* picked.\n*/\nclass AnnotationCollection {\n\n  /**\n  * Build an empty collection\n  */\n  constructor(){\n    this._collection = {};\n\n    // contains all the Object3D of Annotation instances\n    this._container3D = new THREE.Object3D();\n    this._container3D.name = \"annotation collection\";\n\n    this._noNameIncrement = 0;\n    this._onAddingAnnotationCallback = null;\n  }\n\n\n  /**\n  *\n  */\n  getContainer3D(){\n    return this._container3D;\n  }\n\n\n  /**\n  * Add an annotation to the collection\n  * @param {Array of Array} points - Array of [x, y, z], if only one, its a point otherwise it can be a linestring (default) or polygon (options.closed must be true)\n  * @param {String} name - name, suposedly unique\n  * @param {Object} options - all kind of options:\n  * name {String} must be unique or can be null (auto picked based on date),\n  * isClosed {Boolean} makes the diff between a linestring and a polygon - default: false,\n  * description {String} optionnal - default: '',\n  * color {String} - default: \"FF0000\",\n  * eulerAngle {Array} rotation correction [x, y, z] - default: [0, 0, 0],\n  * scale {Array} scale correction [x, y, z] - default: [1, 1, 1],\n  * position {Array} offset [x, y, z] - default: [0, 0, 0]\n  */\n  addAnnotation(points, name, options = {}){\n    if( name in this._collection){\n      console.warn(name + \" is already in the collection\");\n      return;\n    }\n\n    // if no name,\n    if(!name){\n      name = \"annotation_\" + this._noNameIncrement + \"_\" +  new Date().getMilliseconds();\n      this._noNameIncrement ++;\n    }\n\n    // add the new annotation to the collection\n    this._collection[ name ] = new Annotation( points, name, options);\n\n    // add the visual object to Object3D container\n    this._container3D.add( this._collection[ name ].getObject3D() );\n\n    // a nice callback to do something (mainly from the UI view point)\n    if(this._onAddingAnnotationCallback){\n      this._onAddingAnnotationCallback( name );\n    }\n  }\n\n\n  /**\n  * Remove the anotation from the collection.\n  * @param {String} name - name of the annotation to remove (unique)\n  */\n  removeAnnotation( name ){\n    if(! (name in this._collection) ){\n      console.warn(name + \" annotation is not in the collection. Impossible to remove.\");\n      return;\n    }\n\n    // remove the 3D representation\n    this._container3D.remove( this._collection[ name ].getObject3D() );\n  }\n\n\n  /**\n  * Load an annotation file to add its content to the collection.\n  * @param {Object} config - contains config.url and may contain more attributes in the future.\n  */\n  loadAnnotationFileURL( config, isCompressed = false ){\n    var that = this;\n\n    var loadingFunction = isCompressed ? AjaxFileLoader.loadCompressedTextFile : AjaxFileLoader.loadTextFile;\n\n    loadingFunction(\n      config.url,\n\n      // success load\n      function( data ){\n        that._loadAnnotationFileContent( data );\n      },\n\n      // fail to load\n      function( errorInfo ){\n        console.warn(\"Couldnt load the annotation file: \" + config.url);\n\n      }\n    );\n  }\n\n\n  /**\n  * Read and parse the content if a File object containg json annotations.\n  * @param {File} file - HTML5 File object, most likely opened using a file dialog\n  */\n  loadAnnotationFileDialog( annotFile ){\n    var that = this;\n\n    var fr = new FileReader();\n    fr.onload = function(e){\n      //var jsonObj = JSON.parse(e.target.result);\n      that._loadAnnotationFileContent( e.target.result );\n      //console.log(jsonObj);\n    };\n\n    fr.readAsText(annotFile);\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Generic method to load the string content of an annotation file.\n  * This way we can use it no matter if loading from url/ajax or from html5File/dialog.\n  */\n  _loadAnnotationFileContent( jsonStr ){\n    var that = this;\n    // attributes to dig in the annotation file\n    var annotKeys = [\"color\", \"description\", \"isClosed\", \"eulerAngle\", \"scale\", \"position\"];\n\n    var annotObj = JSON.parse( jsonStr );\n    annotObj.annotations.forEach( function( annot ){\n\n      // if an annot has no points, we dont go further\n      if( !(\"points\" in annot) || (annot.points.length == 0)){\n        return;\n      }\n\n      // to be filled on what we find in the annot file\n      var optionObj = {};\n      var name = (\"name\" in annot) ? annot.name : null;\n\n      // collecting the option data\n      annotKeys.forEach(function(key){\n        if( key in annot ){\n          optionObj[ key ] = annot[ key ];\n        }\n      });\n\n      // add to collection\n      that.addAnnotation(annot.points, name, optionObj);\n    });\n  }\n\n\n  /**\n  * Defines a callback to when a new annotation is added.\n  * This callback is called with the name of the annotation (unique).\n  * @param {function} cb - callback\n  */\n  onAddingAnnotation( cb ){\n    this._onAddingAnnotationCallback = cb;\n  }\n\n\n} /* END of class AnnotationCollection */\n\nexport { AnnotationCollection };\n","'use strict';\n\nimport { QuadView } from './QuadView.js';\nimport { LevelManager } from './LevelManager.js';\nimport { OrientationHelper } from './OrientationHelper.js';\nimport { QuadViewInteraction } from './QuadViewInteraction.js';\nimport { ColorMapManager } from './ColorMapManager.js';\nimport { PlaneManager } from './PlaneManager.js';\nimport { MeshCollection } from './MeshCollection.js';\nimport { GuiController } from './GuiController.js';\nimport { BoundingBoxHelper } from './BoundingBoxHelper.js';\nimport { AnnotationCollection } from './AnnotationCollection.js';\n\n\n\n\n/**\n* A QuadScene is a THREE js context where the viewport is split in 4 windows, for each window comes a QuadView.\n* Originally, the purpose of the QuadScene is to display 3 orthogonal views usin othometric cameras, and one additional view using a perspective camera. The later is supposed to be more free of movement, giving an flexible global point of view. The 3 ortho cam are more likely to be in object coordinate so that rotating the main object wont affect what is shown on this views.\n*\n* @param {String} DomContainer - ID of div to show the QuadScene\n* @param {Object} config - {datatype: String, url: String} where datatype is the input data type (\"octree_tiles\" is the only available for the moment) and url is the URL of the JSON config file.\n*\n*/\nclass QuadScene{\n\n  constructor(DomContainer, rez=0){\n    window.addEventListener( 'resize', this._updateSize.bind(this), false );\n\n    this._ready = false;\n    this._counterRefresh = 0;\n    this._resolutionLevel = rez;\n\n    // the four QuadView instances, to be built (initViews)\n    this._quadViews = [];\n    this._quadViewInteraction = null;\n\n    // all the planes to intersect the chunks. Contains the multiplane\n    this._planeManager = null;\n\n    // a static gimbal to show dataset orientation\n    this._orientationHelper = null;\n\n    // called whenever the lvl, orientation or position changes (if set)\n    this._onChangeCallback = null;\n\n    // Called when the config file is loaded, the planes are build and now we just wait to do things\n    this._onReadyCallback = null;\n\n    // called whennever the config file failed to load\n    this._onConfigFileErrorCallback = null;\n\n    // a single colormap manager that will be used for all the planes\n    this._colormapManager = new ColorMapManager();\n\n    // Container on the DOM tree, most likely a div\n    this._domContainer = document.getElementById( DomContainer );\n\n    // scene, where everything goes\n    this._scene = new THREE.Scene();\n\n    this._boundingBoxHelper = new BoundingBoxHelper( this._scene );\n\n    var axisHelper = new THREE.AxisHelper( 1 );\n    axisHelper.layers.enable(1);\n\n    this._scene.add( axisHelper );\n\n    this._scene.add( new THREE.AmbientLight( 0x444444 ) );\n\n    var light1 = new THREE.DirectionalLight( 0xffffff, 0.75 );\n\t\tlight1.position.set( 200, 200, 200 );\n    light1.layers.enable( 0 );\n    light1.layers.enable( 1 );\n\t\tthis._scene.add( light1 );\n\n    // container of annotations and meshes, this is rotated/scaled/repositioned\n    // so that the items are in the proper places compared to the images\n    this._adjustedContainer = new THREE.Object3D();\n\n    // contains the annotations (collection of logics + meshes)\n    this._annotationCollection = new AnnotationCollection();\n\n    // contains the meshes\n    this._meshContainer = new THREE.Object3D();\n\n    // what is inside what:\n    this._adjustedContainer.add(this._meshContainer);\n    this._adjustedContainer.add(this._annotationCollection.getContainer3D());\n    this._scene.add(this._adjustedContainer);\n\n    // renderer construction and setting\n    this._renderer = new THREE.WebGLRenderer( { antialias: true } );\n    this._renderer.setPixelRatio( window.devicePixelRatio );\n    this._renderer.setSize( window.innerWidth, window.innerHeight );\n\n\n    this._domContainer.appendChild( this._renderer.domElement );\n\n    // TODO: use object real size (maybe)\n    // a default camera distance we use instead of cube real size.\n    this._cameraDistance = 50;\n\n    // fog - the distance will be auto adjusted\n    this._scene.fog = new THREE.Fog(0xeeeeee, this._cameraDistance, this._cameraDistance * 2);\n    this._renderer.setClearColor( this._scene.fog.color );\n\n    // to feed the renderer. will be init\n    this._windowSize = {\n      width: 0 ,\n      height: 0\n    };\n\n    // a future instance of MeshCollection, to deal with meshes (obviously)\n    this._meshCollection = null;\n\n    this._stats = null;\n    this._initPlaneManager();\n    this._initViews( DomContainer );\n    this._levelManager = new LevelManager();\n\n\n    // init the gui controller\n    this._guiController = new GuiController(this);\n\n    //this._testAnnotation();\n\n    this._animate();\n\n\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Initialize the 4 QuadView instances. The 3 first being ortho cam and the last being a global view perspective cam.\n  */\n  _initViews( DomContainer ){\n    var that = this;\n\n    var topLeftView = new QuadView(this._scene, this._renderer, this._cameraDistance);\n    topLeftView.initTopLeft();\n    topLeftView.initOrthoCamera();\n    topLeftView.useRelativeCoordinatesOf(this._planeManager.getMultiplaneContainer());\n    topLeftView.enableLayer( 0 );\n\n    var topRightView = new QuadView(this._scene, this._renderer, this._cameraDistance);\n    topRightView.initTopRight();\n    topRightView.initOrthoCamera();\n    topRightView.useRelativeCoordinatesOf(this._planeManager.getMultiplaneContainer());\n    topRightView.enableLayer( 0 );\n\n    var bottomLeft = new QuadView(this._scene, this._renderer, this._cameraDistance);\n    bottomLeft.initBottomLeft();\n    bottomLeft.initOrthoCamera();\n    bottomLeft.useRelativeCoordinatesOf(this._planeManager.getMultiplaneContainer());\n    bottomLeft.enableLayer( 0 );\n\n    var bottomRight = new QuadView(this._scene, this._renderer, this._cameraDistance);\n    bottomRight.initBottomRight();\n    bottomRight.initPerspectiveCamera();\n    bottomRight.enableLayer( 1 );\n    bottomRight.disableLayer(0);\n    bottomRight.addTrackballControl(this._render, this._domContainer);\n\n    // adding the views\n    this._quadViews.push(topLeftView);\n    this._quadViews.push(topRightView);\n    this._quadViews.push(bottomLeft);\n    this._quadViews.push(bottomRight);\n\n    // the quadviewinteraction instance deals with mouse things\n    this._quadViewInteraction = new QuadViewInteraction( this._quadViews, DomContainer);\n    this._quadViewInteraction.setMultiplaneContainer( this._planeManager.getMultiplaneContainer() );\n\n    this._quadViewInteraction.onClickPlane(\n      \"perspective\",\n\n      function( point ){\n        that.setMultiplanePosition( point.x, point.y, point.z);\n      }\n    )\n\n\n  }\n\n\n  /**\n  * @return {LevelManager} so that the UI can query info\n  */\n  getLevelManager(){\n    return this._levelManager;\n  }\n\n\n  /**\n  * Shortcut function to set the multiplane position.\n  * Handy because accessible from the onReady callback.\n  */\n  setMultiplanePosition(x, y, z){\n    this._planeManager.setMultiplanePosition( x, y, z);\n    this._guiController.updateMultiplaneUI( this.getMultiplaneContainerInfo() );\n  }\n\n\n  /**\n  * Shortcut function to set the multiplane position.\n  * Handy because accessible from the onReady callback.\n  */\n  setMultiplaneRotation(x, y, z){\n    this._planeManager.setMultiplaneRotation( x, y, z);\n    this._guiController.updateMultiplaneUI( this.getMultiplaneContainerInfo() );\n  }\n\n  /**\n  * [PRIVATE]\n  * Initialize the planeManager, so that we eventually have something to display here!\n  */\n  _initPlaneManager(){\n    var that = this;\n\n    this._planeManager = new PlaneManager(this._colormapManager, this._scene);\n    this._planeManager.enableLayerHiRez(0);\n    this._planeManager.disableLayerHiRez(1);\n    this._planeManager.enableLayerLoRez(1);\n    this._planeManager.disableLayerLoRez(0);\n\n    // callback when multiplane moves\n    this._planeManager.onMultiplaneMove( function( position ){\n\n      that._updatePerspectiveCameraLookAt( position );\n      that._syncOrientationHelperPosition( position );\n    });\n\n    /*\n    // callback when multiplane rotates\n    this._planeManager.onMultiplaneRotate( function(){\n      // nothing to do here for the moment\n    });\n    */\n\n  }\n\n\n  /**\n  * Add a statistics widget\n  */\n  initStat(){\n    this._stats = new Stats();\n    this._domContainer.appendChild( this._stats.dom );\n\n    // place it on top right\n    this._stats.dom.style.right = '0';\n    this._stats.dom.style.left = 'initial';\n    this._stats.dom.style.top = '0';\n    this._stats.dom.style.position = 'absolute';\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Update the renderer with new window size if they changed.\n  */\n  _updateSize() {\n    if (  this._windowSize.width != window.innerWidth ||\n          this._windowSize.height != window.innerHeight ) {\n\n      this._windowSize.width  = window.innerWidth;\n      this._windowSize.height = window.innerHeight;\n\n      // update the object that deals with view interaction\n      this._quadViewInteraction.updateWindowSize(\n        this._windowSize.width,\n        this._windowSize.height\n      );\n\n      this._renderer.setSize ( this._windowSize.width, this._windowSize.height );\n    }\n  }\n\n\n  /**\n  * @return {Number} the resolution level\n  */\n  getResolutionLevel(){\n    return this._resolutionLevel;\n  }\n\n\n  /**\n  * @return {ColorMapManager} the colormap manager\n  */\n  getColormapManager(){\n    return this._colormapManager;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * To feed the animation feature built in WebGL.\n  */\n  _animate(){\n    this._render();\n\n    if(this._stats){\n      this._stats.update();\n    }\n\n    // call a built-in webGL method for annimation\n    requestAnimationFrame( this._animate.bind(this) );\n\n    // updating the control is necessary in the case of a TrackballControls\n    this._quadViews[3].updateControl();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Typical rendering function, necessary in THREE js\n  */\n  _render(){\n    let that = this;\n\n    // TODO: make somethink better for refresh once per sec!\n    if(this._ready){\n      if(this._counterRefresh % 30 == 0){\n        this._updateAllPlanesShaderUniforms();\n      }\n      this._counterRefresh ++;\n    }\n\n    // in case the window was resized\n    //this._updateSize();\n\n    // refresh each view\n    this._quadViews.forEach(function(view){\n      view.renderView();\n    });\n\n  }\n\n\n  /**\n  * @return {OrientationHelper} the instance of OrientationHelper used in Quadscene.\n  */\n  getOrientationHelper(){\n    return this._orientationHelper;\n  }\n\n\n  /**\n  * @return {BoundingBoxHelper} the bounding box helper\n  */\n  getBoundingBoxHelper(){\n    return this._boundingBoxHelper;\n  }\n\n\n  /**\n  * Entry point to load data (texture chunk octree or mesh collection)\n  */\n  loadData( config ){\n    if( config.datatype == \"precomputed_octree_tiles\"){\n      this._initLevelManager(config);\n    }else if(config.datatype == \"mesh_collection\"){\n      this._initMeshCollection(config);\n    }else if(config.datatype == \"colormap_collection\"){\n      this._colormapManager.loadCollection( config );\n    }else if(config.datatype == \"annotation_collection\"){\n      this._annotationCollection.loadAnnotationFileURL( config );\n    }else{\n      console.warn(\"The data to load has an unknown format.\");\n    }\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  */\n  _initMeshCollection( config ){\n    this._meshCollection = new MeshCollection( config, this._meshContainer );\n  }\n\n  /**\n  * [PRIVATE]\n  * Initialize the level manager and run some local init method when the lvl manager is ready.\n  */\n  _initLevelManager( config ){\n    var that = this;\n\n    // the config file was succesfully loaded\n    this._levelManager.loadConfig(config);\n\n    this._levelManager.onReady(function(){\n      var boxSize = that._levelManager.getBoundingBox();\n\n      that._planeManager.setLevelManager( that._levelManager );\n      that._levelManager.setResolutionLevel( that._resolutionLevel );\n      that._boundingBoxHelper.build( boxSize );\n\n      that._planeManager.setMultiplanePosition(\n        boxSize[0] / 2,\n        boxSize[1] / 2,\n        boxSize[2] / 2\n      );\n\n      that._initOrientationHelper( new THREE.Vector3(boxSize[0] / 2, boxSize[1] / 2, boxSize[2] / 2) );\n      that._initPlaneInteraction();\n      that._ready = true;\n\n      if(that._onReadyCallback){\n        that._onReadyCallback(that);\n      }\n\n      // the callback above may have changed the rotation/position from URL\n      that._guiController.updateMultiplaneUI( that.getMultiplaneContainerInfo() );\n\n    });\n\n    // the config file failed to load\n    this._levelManager.onConfigError( function(url, code){\n      if(that._onConfigFileErrorCallback){\n        that._onConfigFileErrorCallback(url, code);\n      }\n    });\n\n  }\n\n\n  /**\n  * Update the resolution level, refresh the frustrum, the size of the helper, the scale of the planes.\n  * @param {Number} lvl - resolution level in [0, 6]\n  */\n  setResolutionLevel(lvl){\n    console.log(\"--------- LVL \" + lvl + \" ---------------\");\n    this._resolutionLevel = lvl;\n    this._levelManager.setResolutionLevel( this._resolutionLevel );\n    this._planeManager.updateScaleFromRezLvl( this._resolutionLevel );\n\n    // update size of the orientation helper\n    this._syncOrientationHelperScale();\n\n    // update the fog distance to progressively hide annotation\n    var fogDistance = this._orientationHelper.getRadius() * 4;\n    this._scene.fog.far = this._cameraDistance + fogDistance;\n\n    // update the ortho cam frustrum\n    this._updateOthoCamFrustrum();\n\n    // update the UI\n    this._guiController.updateResolutionLevelUI( lvl );\n\n    if(this._onUpdateViewCallback){\n      this._onUpdateViewCallback( this.getMultiplaneContainerInfo() );\n    }\n  }\n\n\n\n  /**\n  * Updates the uniforms to send to the shader of the plane. Will trigger chunk loading for those which are not already in memory.\n  */\n  _updateAllPlanesShaderUniforms(){\n    this._planeManager.updateUniforms();\n  }\n\n\n  /**\n  * So that the perspective cam targets the object container center\n  */\n  _updatePerspectiveCameraLookAt( position ){\n    this._quadViews[3].updateLookAt( position );\n  }\n\n\n  /**\n  * Updates the frustrum of the 3 ortho cam by adjusting a factor relative to the level of resolution. This ensure we keep the same image ratio.\n  */\n  _updateOthoCamFrustrum(){\n    var frustrumFactor = 1 / Math.pow(2, this._resolutionLevel);\n    this._quadViews[0].updateOrthoCamFrustrum( frustrumFactor );\n    this._quadViews[1].updateOrthoCamFrustrum( frustrumFactor );\n    this._quadViews[2].updateOrthoCamFrustrum( frustrumFactor );\n  }\n\n\n  /**\n  * Initialize the orientation helper and adds it to the scene (and not to the main object, because it is not supposed to rotate)\n  */\n  _initOrientationHelper( position ){\n    this._orientationHelper = new OrientationHelper(\n      this._planeManager.getWorldDiagonalHiRez() / 13\n    );\n\n    this._orientationHelper.addTo( this._scene );\n    this._syncOrientationHelperPosition( position );\n  }\n\n\n  /**\n  * Synchronize the orientation helper position based on the main object position.\n  */\n  _syncOrientationHelperPosition( position ){\n    if(this._orientationHelper){\n      this._orientationHelper.setPosition( position );\n    }\n  }\n\n\n  /**\n  * Triggered when the resolution level changes to keep the orientation helper the right size.\n  */\n  _syncOrientationHelperScale(){\n    this._orientationHelper.rescaleFromResolutionLvl( this._resolutionLevel );\n  }\n\n\n  /**\n  * Specify a callback for when the Quadscene is ready.\n  * @param {Callback} cb - a function to be call with the object _this_ in param (the current QuadScene instance).\n  */\n  onReady(cb){\n    this._onReadyCallback = cb;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Defines the callback for interacting with the views\n  */\n  _initPlaneInteraction(){\n    var that = this;\n\n    // callback def: translation\n    this._quadViewInteraction.onGrabViewTranslate( function(distance, viewIndex){\n      var factor = Math.pow(2, that._resolutionLevel);\n\n      switch (viewIndex) {\n        case 0:\n          that._planeManager.translateMultiplaneX(-distance.x/factor, distance.y/factor);\n          break;\n        case 1:\n          that._planeManager.translateMultiplaneY(distance.x/factor, distance.y/factor);\n          break;\n        case 2:\n          that._planeManager.translateMultiplaneZ(distance.x/factor, -distance.y/factor);\n          break;\n        default:  // if last view, we dont do anything\n          return;\n      }\n\n    });\n\n    // callback def: regular rotation (using R key)\n    this._quadViewInteraction.onGrabViewRotate( function(angleRad, angleDir, viewIndex){\n      switch (viewIndex) {\n        case 0:\n          that._planeManager.rotateMultiplaneX(angleRad * angleDir);\n          break;\n        case 1:\n          that._planeManager.rotateMultiplaneY(angleRad * angleDir * -1);\n          break;\n        case 2:\n          that._planeManager.rotateMultiplaneZ(angleRad * angleDir);\n          break;\n        default:  // if last view, we dont do anything\n          return;\n      }\n    });\n\n    // callback def: transverse rotation (using T key)\n    this._quadViewInteraction.onGrabViewTransverseRotate( function(distance, viewIndex){\n      //var factor = Math.pow(2, that._resolutionLevel) / 10;\n      var factor =  that._resolutionLevel / 2;\n\n      switch (viewIndex) {\n        case 0:\n          that._planeManager.rotateMultiplaneZ(distance.x / factor);\n          that._planeManager.rotateMultiplaneY(-distance.y / factor);\n          break;\n        case 1:\n          that._planeManager.rotateMultiplaneX(-distance.y / factor);\n          that._planeManager.rotateMultiplaneZ(distance.x / factor);\n          break;\n        case 2:\n          that._planeManager.rotateMultiplaneX(-distance.y / factor);\n          that._planeManager.rotateMultiplaneY(distance.x / factor);\n          break;\n        default:  // if last view, we dont do anything\n          return;\n      }\n    });\n\n    // callback def: arrow down\n    this._quadViewInteraction.onArrowDown( function(viewIndex){\n      var factor = that._levelManager.getBoundingBox()[0] / that._levelManager.getLevelInfo(that._resolutionLevel, \"size\")[0];\n\n      switch (viewIndex) {\n        case 0:\n          that._planeManager.translateMultiplaneY(-factor, 0);\n          break;\n        case 1:\n          that._planeManager.translateMultiplaneX(-factor, 0);\n          break;\n        case 2:\n          that._planeManager.translateMultiplaneY(0, -factor);\n          break;\n        default:  // if last view, we dont do anything\n          return;\n      }\n    });\n\n    // callback def: arrow up\n    this._quadViewInteraction.onArrowUp( function(viewIndex){\n      var factor = that._levelManager.getBoundingBox()[0] / that._levelManager.getLevelInfo(that._resolutionLevel, \"size\")[0];\n\n      switch (viewIndex) {\n        case 0:\n          that._planeManager.translateMultiplaneY(factor, 0);\n          break;\n        case 1:\n          that._planeManager.translateMultiplaneX(factor, 0);\n          break;\n        case 2:\n          that._planeManager.translateMultiplaneY(0, factor);\n          break;\n        default:  // if last view, we dont do anything\n          return;\n      }\n    });\n\n    this._quadViewInteraction.onDonePlaying(function(){\n      that._guiController.updateMultiplaneUI( that.getMultiplaneContainerInfo() );\n      that._onUpdateViewCallback && that._onUpdateViewCallback( that.getMultiplaneContainerInfo() );\n    });\n\n  }\n\n\n  /**\n  * @return {Object} the returned object if of the form:\n  * { resolutionLvl, position {x, y, z}, rotation {x, y, z} }\n  */\n  getMultiplaneContainerInfo(){\n\n    var multiplanePos = this._planeManager.getMultiplanePosition();\n    var multiplaneRot = this._planeManager.getMultiplaneRotation();\n\n    return {\n      resolutionLvl: this._resolutionLevel,\n      position: {\n        x: multiplanePos.x,\n        y: multiplanePos.y,\n        z: multiplanePos.z\n      },\n      rotation: {\n        x: multiplaneRot.x,\n        y: multiplaneRot.y,\n        z: multiplaneRot.z\n      }\n    };\n\n  }\n\n\n  /**\n  * Defines the callback for whenever the lvl, rotation or position changes\n  */\n  onUpdateView( cb ){\n    this._onUpdateViewCallback = cb;\n  }\n\n\n  /**\n  * Defines a function if an error occures when loading the config file has some trouble to load (but not necessary an error). Function called with 2 args: url and status code. The status code will define if it corresponds to an error or not.\n  */\n  onConfigFileError(cb){\n    this._onConfigFileErrorCallback = cb;\n  }\n\n\n  /**\n  * @return {AnnotationCollection} instance of the annotation collection\n  */\n  getAnnotationCollection(){\n    return this._annotationCollection;\n  }\n\n\n}\n\nexport { QuadScene };\n"],"names":[],"mappings":"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"}